"'[DEV]AIGraph_TokenUsage (CosmosDB)' As screen":
    Fill: =ColorValue(CSS_COMMON.colors.bg2)
    LoadingSpinnerColor: =RGBA(105, 121, 126, 1)
    OnHidden: |-
        =Concurrent(
            Set(gblStartPage,"AIGraph_TokenUsage"),
            Clear(AIGraphToken)
        )
    OnVisible: |
        =//============================== << 화면 최초 접속 시 >> ==============================
        // 1. 로딩 이미지 활성화
        Concurrent(
            UpdateContext({locLoadingSpinner:true}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:true})
        ); // 로딩 스피너 배경 이미지 비활성 );
            
        // 2. 초기화
        Set(AxisPickingList, ["토큰", "GPT 버전", "카테고리"]); // 
        Concurrent(
            Refresh(똑실이_Token_table),       // DB REFRESH
            UpdateContext({locPopupBackground:false}),  // 팝업 배경 이미지 비활성화
        
            Set(DatePickerSetting, false),
            
            ClearCollect(
                colCategoryAdmin,
                {Category_LV1: DEFAULT_CATEGORY_VALUE, Category_LV2: DEFAULT_CATEGORY_VALUE, LV1Order: 0, CategoryType: "None"},
                ForAll(
                    Table(ParseJSON('똑실이-[Apps]Lv1권한할당카테고리목록'.Run(User().Email).assigned_categories)),
                    {
                        Category_LV1: Text(ThisRecord.Value.Category_LV1),
                        Category_LV2: Text(ThisRecord.Value.Category_LV2),
                        Category_LV1LV2: Text(ThisRecord.Value.Category_LV1) & "/" & Text(ThisRecord.Value.Category_LV2)
                    }
                )
            );
        );
        
        //============================== << 필터 초기화 및 로딩이미지 비활성화 >> ==============================
        Reset(Dropdown_AxisPicker_AIGraph_TokenUsage_1);
        Set(AppsBIAxis, Dropdown_AxisPicker_AIGraph_TokenUsage_1.Selected);
        Concurrent(
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(AIGraphAxis, First(AxisPickingList)),
        
            Reset(Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1),
            Reset(Dropdown_GalleryFilter_CategoryLV2_AIGraph_TokenUsage_1),
            Reset(Dropdown_DatePicker_AIGraph_TokenUsage_1),
            Reset(DatePicker_FirstDate_AIGraph_TokenUsage_1),
            Reset(DatePicker_LastDate_AIGraph_TokenUsage_1),
            Reset(Dropdown_AxisPicker_AIGraph_TokenUsage_1)
        );
        
        Select(Button_Table_Filtering_AIGraph_TokenUsage_1);
        
        Concurrent(
            UpdateContext({locLoadingSpinner:false}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:false}) // 로딩 스피너 배경 이미지 비활성
        );

    Label_AIGraphMain_AIGraph_TokenUsage_1 As Component_Main_Title:
        ScreenTitle: =First(똑실이_ChatbotText_table).BotName & " 사용 분석"
        X: =330

    BG_Summ_AIGraph_TokenUsage_1 As Component_Container:
        Height: =870
        Width: =465
        X: =BG_Graph_AIGraph_TokenUsage_1.X + BG_Graph_AIGraph_TokenUsage_1.Width - 20
        Y: =198
        ZIndex: =2

    BG_Filtering_AIGraph_TokenUsage_1 As Component_Container:
        Height: =120
        Width: =1556 + 40
        X: =Label_AIGraphMain_AIGraph_TokenUsage_1.X - 20
        Y: =Label_AIGraphMain_AIGraph_TokenUsage_1.Y + Label_AIGraphMain_AIGraph_TokenUsage_1.Height -5
        ZIndex: =3

    BG_Graph_AIGraph_TokenUsage_1 As Component_Container:
        Height: =870
        Width: =1151
        X: =Label_AIGraphMain_AIGraph_TokenUsage_1.X - 20
        Y: =198
        ZIndex: =4

    Sep_PieChart_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Label_PieChart_AIGraph_TokenUsage_1.X
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y + Label_GraphTitle_AIGraph_TokenUsage_1.Height + 16
        ZIndex: =5

    Button_Table_Filtering_AIGraph_TokenUsage_1 As button:
        BorderColor: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(105, 121, 126, 1)
        FocusedBorderColor: =ColorFade(Self.Fill, -75%)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
        OnSelect: |+
            =UpdateContext({ 
                locLoadingSpinner: true
            });
            
            Concurrent(
                Set(AIGraphStartDate,
                    Text(If(
                            DatePickerSetting = false,
                            Switch(
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                "1년", DateAdd(Today(),-12,TimeUnit.Months)
                            ), DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                        ), "yyyy-mm-dd"
                    )
                ),
                Set(AIGraphEndDate,
                    Text(If(
                        DatePickerSetting = false,
                        DateAdd(Today(),-0,TimeUnit.Months),
                        DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate
                    ), "yyyy-mm-dd"))
            );
            
            // UpdateContext({AIGraphResponse: '똑실이-[Apps]AIGraph토큰사용성분석'.Run(
            UpdateContext({AIGraphResponse: '똑실이-[Apps]AIGraph토큰사용성분석V2'.Run(
                    If(
                        // LV1=전체 LV2=전체 일경우
                        SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                        SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                        "/?" & Substitute(Concatenate(Concat(LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1), Category_LV1LV2 & "?"),"delete_point"),"?delete_point",""),
                        If(
                            // 카테고리LV1만 선택한 경우
                            SelectedLV1_AIGraph <> DEFAULT_CATEGORY_VALUE && 
                            SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                            Substitute(Concatenate(Concat(Filter(
                                    LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                    Category_LV1 = SelectedLV1_AIGraph
                                ), Category_LV1LV2 & "?"
                            ),"delete_point"), "?delete_point", ""),
                            // 카테고리LV2만 선택한 경우
                            If(
                                SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                                SelectedLV2_AIGraph <> DEFAULT_CATEGORY_VALUE,
                                Substitute(Concatenate(Concat(Filter(
                                        LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                        Category_LV2 = SelectedLV2_AIGraph
                                    ), Category_LV1LV2 & "?"
                                ), "delete_point"), "?delete_point",""),
                                // LV1, LV2 둘다 선택한 경우
                                SelectedLV1_AIGraph & "/" & SelectedLV2_AIGraph
                            )
                        )
                    )
                    ,{
                    // StartDate
                    text_1: AIGraphStartDate,
                    // EndDate
                    text_2: AIGraphEndDate
                }).result_json
            });
            
            ClearCollect(
                AIGraphToken,
                ForAll(
                    Table(ParseJSON(AIGraphResponse)),
                    {
                        Category_LV1: Text(If(ThisRecord.Value.Category_LV1=Blank() Or ThisRecord.Value.Category_LV1="카테고리", "카테고리 미선택", ThisRecord.Value.Category_LV1)),
                        Category_LV2: Text(If(ThisRecord.Value.Category_LV1=Blank() Or ThisRecord.Value.Category_LV1="카테고리" Or ThisRecord.Value.Category_LV2=Blank() Or ThisRecord.Value.Category_LV2="전체선택", "카테고리 미선택", ThisRecord.Value.Category_LV2)),
                        Token_Date_: Text(Year(ThisRecord.Value.Token_Date)&"년"&Month(ThisRecord.Value.Token_Date)&"월"&Day(ThisRecord.Value.Token_Date)&"일"),
                        Token_Date: Date(Year(ThisRecord.Value.Token_Date), Month(ThisRecord.Value.Token_Date), Day(ThisRecord.Value.Token_Date)),
                        Token_Input: Text(ThisRecord.Value.Token_Input),
                        Token_Output: Text(ThisRecord.Value.Token_Output),
                        Token_Total: Text(ThisRecord.Value.Token_Total),
                        Token_Model: Text(ThisRecord.Value.AnswerModel),
                        Bot_Type: Text(ThisRecord.Value.Bot_Type),
                        ID: Int(ThisRecord.Value.ID)
                    }
                )
            );
            
            ClearCollect(
                chatBotVersionList,
                AddColumns(
                    Sort(
                        Filter(
                            Distinct(
                                AIGraphToken,
                                Token_Model
                            ), 
                            Value <> Blank()
                        ),
                        Value,
                        SortOrder.Ascending
                    ),
                    "Index",0
                )
            );
            
            ClearCollect(
                AIGraphAddColYM_All,
                AddColumns(
                    AIGraphToken,
                    "YearMonth",
                    Year(Token_Date)*100 + Month(Token_Date),
                    "YearMonth_",
                    Text(Year(Token_Date)) & "년 " & Text(Month(Token_Date)) &"월"
                )
            );
            
            If(
                SelectedLV1_AIGraph = "전체",
                Set(AIGraphAddColYM, AIGraphAddColYM_All),
                If(
                    SelectedLV1_AIGraph = "카테고리",
                    Set(AIGraphAddColYM, Filter(AIGraphAddColYM_All, Category_LV1="카테고리 미선택")),
                    Set(AIGraphAddColYM, Filter(AIGraphAddColYM_All, Category_LV1=SelectedLV1_AIGraph))
                )
            );
            
            If(
                AppsBIAxis.Value = "토큰",
            
                Concurrent(
                    ClearCollect(
                        AIGraphTokenMonthlyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or 
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                "Token_Input",
                                Sum(Group, Token_Input),
                                "Token_Output",
                                Sum(Group, Token_Output),
                                "Token_Total",
                                Sum(Group, Token_Total)
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphTokenDailyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or 
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "Token_Date", "Group"),
                                "Token_Input",
                                Sum(Group, Token_Input),
                                "Token_Output",
                                Sum(Group, Token_Output),
                                "Token_Total",
                                Sum(Group, Token_Total)
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphTokenDailyUsage_Custom,
                        If(
                            DatePickerSetting = true,
                            AddColumns(
                                GroupBy(AIGraphToken, "Token_Date", "Group"),
                                "Token_Input",
                                Sum(Group, Token_Input),
                                "Token_Output",
                                Sum(Group, Token_Output),
                                "Token_Total",
                                Sum(Group, Token_Total)
                            )
                        )
                    )
                ),
                If(
                    AppsBIAxis.Value = "GPT 버전",
            
                    Concurrent(
                        ClearCollect(
                            AIGraphGPTvMonthlyUsage,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or 
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Token_Model", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvDailyUsage,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or 
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "Token_Date", "Token_Date_", "Token_Model", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvMonthlyXAxis,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or 
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvDailyXAxis,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or 
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "Token_Date", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvDailyUsage_Custom,
                            If(
                                DatePickerSetting = true,
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "Token_Date", "Token_Date_", "Token_Model", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvDailyXAxis_Custom,
                            If(
                                DatePickerSetting = true,
                                AddColumns(
                                    GroupBy(AIGraphToken, "Token_Date", "Group"),
                                    "Token_Total",
                                    Sum(Group, Token_Total)
                                )
                            )
                        )
                    ),
            
                    If(
                        AppsBIAxis.Value = "카테고리",
                        ClearCollect(
                            AIGraphCategoryLV1Usage,
                            AddColumns(
                                GroupBy(AIGraphToken, "Category_LV1", "Group"),
                                "Token_Total",
                                Sum(Group, Token_Total),
                                "Token_UsageRate",
                                IfError(Text(Int(Sum(Group, Token_Total) / Sum(Filter(AIGraphToken, Category_LV1), Token_Total) * 10000) / 100, "#0.0#%"),"0.0%",Text(Int(Sum(Group, Token_Total) / Sum(Filter(AIGraphToken, Category_LV1), Token_Total) * 10000) / 100, "#0.0#%")),
                                "Index",
                                0
                            )
                        );
                        ClearCollect(
                            AIGraphCategoryLV2Usage,
                            AddColumns(
                                GroupBy(AIGraphToken, "Category_LV2", "Group"),
                                "Token_Total",
                                Sum(Group, Token_Total),
                                "Token_UsageRate",
                                IfError(Text(Int(Sum(Group, Token_Total) / Sum(Filter(AIGraphToken, Category_LV2), Token_Total) * 10000) / 100, "#0.0#%"),"0.0%",Text(Int(Sum(Group, Token_Total) / Sum(Filter(AIGraphToken, Category_LV2), Token_Total) * 10000) / 100, "#0.0#%")),
                                "Index",
                                0
                            )
                        )
                    )
                )
            );
            
            Concurrent(
                ClearCollect(
                    AIGraphCategoryLV1Usage,
                    SortByColumns(
                        Filter(
                            AIGraphCategoryLV1Usage,
                            Category_LV1 <> Blank(),
                            Token_UsageRate
                        ),"Token_Total",SortOrder.Descending
                    )
                ),
                ClearCollect(
                    AIGraphCategoryLV2Usage,
                    SortByColumns(
                        Filter(
                            AIGraphCategoryLV2Usage,
                            Category_LV2 <> Blank() Or Category_LV2 <> "카테고리 미선택",
                            Token_UsageRate
                        ),"Token_Total",SortOrder.Descending
                    )
                )
            );
                        
            
            If(
                AppsBIAxis.Value = "GPT 버전",
                
                ForAll(
                    Sequence(CountRows(chatBotVersionList)),
                    Patch(
                        chatBotVersionList,
                        Index(chatBotVersionList, Value),
                        {Index: Value}
                    )
                ),
                If(
                    AppsBIAxis.Value = "카테고리",
                    Concurrent(
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV1Usage)),
                            Patch(
                                AIGraphCategoryLV1Usage,
                                Index(AIGraphCategoryLV1Usage, Value),
                                {Index: Value}
                            )
                        ),
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV2Usage)),
                            Patch(
                                AIGraphCategoryLV2Usage,
                                Index(AIGraphCategoryLV2Usage, Value),
                                {Index: Value}
                            )
                        )
                    )
                )
            );
            
            
            UpdateContext({ 
                locLoadingSpinner: false
            });
            
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =15
        Text: ="버튼"
        Visible: =false
        X: =835
        Y: =1040
        ZIndex: =6

    Component_GNB_AIGraph_TokenUsage_1 As New_Component_GNB:
        ZIndex: =7

    Label_GalleryFilter_Category_AIGraph_TokenUsage_1 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =32
        PaddingBottom: =0
        PaddingLeft: =2
        PaddingRight: =2
        PaddingTop: =0
        Text: ="카테고리"
        Width: =80
        X: =BG_Filtering_AIGraph_TokenUsage_1.X + 38
        Y: =BG_Filtering_AIGraph_TokenUsage_1.Y + BG_Filtering_AIGraph_TokenUsage_1.Height/2 - Self.Height/2
        ZIndex: =8

    Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1 As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =If(SelectedLV1_AIGraph = "카테고리", "카테고리 미선택", SelectedLV1_AIGraph)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Filter(
                Distinct(
                    colCategoryAdmin,
                    Category_LV1
                ),
                Value <> Blank()
            )
        OnChange: |-
            =If(Self.Selected.Value = "카테고리 미선택", Set(SelectedLV1_AIGraph, "카테고리"), Set(SelectedLV1_AIGraph, Self.Selected.Value));
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Select(Button_Table_Filtering_AIGraph_TokenUsage_1)
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV1을 선택해주세요"
        Width: =200
        X: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.X + Label_GalleryFilter_Category_AIGraph_TokenUsage_1.Width + 8
        Y: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.Y
        ZIndex: =9

    Dropdown_GalleryFilter_CategoryLV2_AIGraph_TokenUsage_1 As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =If(SelectedLV2_AIGraph = "전체선택", "카테고리 미선택", SelectedLV2_AIGraph)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_AxisPicker_AIGraph_TokenUsage_1.Selected.Value<>"카테고리", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Filter(
                If(
                    SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE,
                    // 카테고리 LV1 이 전체로 선택되어 있을경우
                    Distinct(
                        colCategoryAdmin,
                        Category_LV2
                    ),
                    // 카테고리 LV1 이 전체가 아닌 다른걸로 선택되어 있을경우
                    Distinct(
                        Filter(
                            colCategoryAdmin,
                            Category_LV1 = DEFAULT_CATEGORY_VALUE || Category_LV1 = SelectedLV1_AIGraph
                        ),
                        Category_LV2
                    )
                ),
                Value <> Blank()
            )
        OnChange: |-
            =If(Self.Selected.Value = "카테고리 미선택", Set(SelectedLV2_AIGraph, "전체선택"), Set(SelectedLV2_AIGraph, Self.Selected.Value));
            Select(Button_Table_Filtering_AIGraph_TokenUsage_1)
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV2을 선택해주세요"
        Width: =200
        X: ='Label_GalleryFilter_>_AIGraph_TokenUsage_1'.X + 'Label_GalleryFilter_>_AIGraph_TokenUsage_1'.Width
        Y: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.Y
        ZIndex: =10

    "'Label_GalleryFilter_>_AIGraph_TokenUsage_1' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =If(Dropdown_AxisPicker_AIGraph_TokenUsage_1.Selected.Value<>"카테고리", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Text: =">"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.X + Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Width
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y + Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Height/2 - Self.Height/2
        ZIndex: =11

    Label_DatePicker_AIGraph_TokenUsage_1 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="기간"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV2_AIGraph_TokenUsage_1.X + Dropdown_GalleryFilter_CategoryLV2_AIGraph_TokenUsage_1.Width + 24
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =12

    "'Label_DatePicker_~_AIGraph_TokenUsage_1' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        PaddingLeft: =0
        PaddingRight: =0
        Text: ="~"
        Width: =40
        X: =DatePicker_FirstDate_AIGraph_TokenUsage_1.X + DatePicker_FirstDate_AIGraph_TokenUsage_1.Width
        Y: ='Label_GalleryFilter_>_AIGraph_TokenUsage_1'.Y
        ZIndex: =13

    DatePicker_FirstDate_AIGraph_TokenUsage_1 As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DefaultDate: |-
            =//DateAdd(Today(),-1,TimeUnit.Months)
            
            Switch(
                Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value,
                "1개월",
                    DateAdd(Today(),-1,TimeUnit.Months),
                "3개월",
                    DateAdd(Today(),-3,TimeUnit.Months),
                "6개월",
                    DateAdd(Today(),-6,TimeUnit.Months),
                "1년",
                    DateAdd(Today(),-12,TimeUnit.Months),
                "직접선택",
                    DateAdd(Today(),-1,TimeUnit.Months)
            )
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_TokenUsage_1);
        PaddingTop: =5
        Reset: =If(Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value<>"직접선택", true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        StartYear: =Year(Today())-1
        Width: =200
        X: |
            =Dropdown_DatePicker_AIGraph_TokenUsage_1.X + Dropdown_DatePicker_AIGraph_TokenUsage_1.Width + 10
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =14

    DatePicker_LastDate_AIGraph_TokenUsage_1 As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_TokenUsage_1);
        PaddingTop: =5
        Reset: =If(Dropdown_DatePicker_AIGraph_TokenUsage_1.Selected.Value<>"직접선택", true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: |
            =200
        X: ='Label_DatePicker_~_AIGraph_TokenUsage_1'.X + 'Label_DatePicker_~_AIGraph_TokenUsage_1'.Width
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =15

    Dropdown_DatePicker_AIGraph_TokenUsage_1 As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =["1개월", "3개월", "6개월", "1년", "직접선택"]
        OnChange: |-
            =If(
                Self.Selected.Value = "직접선택",
                Set(DatePickerSetting,true),
                Set(DatePickerSetting,false)
            );
            
            Select(Button_Table_Filtering_AIGraph_TokenUsage_1)
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Reset: =If(Self.Visible=true, true, false)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: |
            =150
        X: =Label_DatePicker_AIGraph_TokenUsage_1.X + Label_DatePicker_AIGraph_TokenUsage_1.Width + 8
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =16

    Label_RadioFilter_Category_AIGraph_TokenUsage_1 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =DatePicker_LastDate_AIGraph_TokenUsage_1.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="비교방식"
        Width: =80
        X: =DatePicker_LastDate_AIGraph_TokenUsage_1.X + DatePicker_LastDate_AIGraph_TokenUsage_1.Width + 24
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =17

    LineChart_Default_Monthly_AIGraph_TokenUsage_1 As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                    Filter(
                        AIGraphTokenMonthlyUsage,
                        (
                            YearMonth >= 
                            Switch(
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                    "6개월",
                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                    "1년",
                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                            )
                        ) &&
                        (
                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                        ),YearMonth_ <> Blank()
                    )
                )
            )
        Markers: |-
            =/*If(
                CountRows(
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value = "6개월",
                            Filter(
                                AIGraphTokenMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),YearMonth_ <> Blank()
                            )
                        )
                    )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And LineChart_Default_Daily_AIGraph_TokenUsage_1.Visible = false And AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Width
        X: =LineChart_Default_Daily_AIGraph_TokenUsage_1.X
        Y: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =18

    LineChart_Default_Daily_AIGraph_TokenUsage_1 As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =675
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: =AIGraphToken
        Markers: |-
            =/*If(
                CountRows(
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value = "3개월",
                            Filter(
                                AIGraphTokenDailyUsage,
                                (
                                    Token_Date >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value,
                                            "1개월",
                                        Int(Text(DateAdd(Today(),-1,TimeUnit.Months), "yyyymm")),
                                            "3개월",
                                        Int(Text(DateAdd(Today(),-3,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    Token_Date <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),Token_Date <> Blank()
                            )
                        )
                    )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And AppsBIAxis.Value = "토큰",
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                    true,
                    false
                ),
                false
            )
        Width: =BG_Graph_AIGraph_TokenUsage_1.Width - 60
        X: =340
        Y: =340
        ZIndex: =19

    LineChart_Custom_Daily_AIGraph_TokenUsage_1 As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = true,
                Filter(
                    AIGraphTokenDailyUsage_Custom,
                    (
                        Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                    ) && (
                        Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                    )
                )
            )
        Markers: |-
            =/*If(
                CountRows(
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage.SelectedText.Value = "직접선택",
                        Filter(
                            AIGraphTokenDailyUsage_Custom,
                            Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage.SelectedDate &&
                            Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage.SelectedDate,
                            Token_Date <> Blank()
                        )
                    )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = true And AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Width
        X: =LineChart_Default_Daily_AIGraph_TokenUsage_1.X
        Y: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =20

    BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3 As gallery.galleryHorizontal:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Height
        Items: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                If(
                    !IsError(1 / CountRows(AIGraphGPTvMonthlyUsage)),
                    AIGraphGPTvMonthlyXAxis
                ),
                Blank()
            )
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =135
        Visible: |-
            =If(
                DatePickerSetting = false And AppsBIAxis.Value = "GPT 버전",
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                    true,
                    false
                ),
                false
            )
        Width: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.Width
        X: =LineChart_Default_Daily_AIGraph_TokenUsage_1.X + 20
        Y: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =21

        DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =125
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13
            Text: |
                =//Char(13) & ThisItem.YearMonth_
                
                Char(13) & Left(ThisItem.YearMonth_,5) &
                Char(13) & Right(ThisItem.YearMonth_,3)
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth
            Y: =Parent.Height-Self.Height
            ZIndex: =1

        Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4 As rectangle:
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.aigraphTotal)
            FocusedBorderThickness: =4
            Height: |-
                =IfError(If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        (Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvMonthlyXAxis,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvMonthlyXAxis,
                                    YearMonth_=ThisItem.YearMonth_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvMonthlyXAxis,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ),0,If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        (Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvMonthlyXAxis,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvMonthlyXAxis,
                                    YearMonth_=ThisItem.YearMonth_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvMonthlyXAxis,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ))
            OnSelect: =Select(Parent)
            Width: =40
            X: |-
                =If(
                    !IsError(Parent.TemplateWidth/10/CountRows(chatBotVersionList)),
                    Parent.TemplateWidth/10/CountRows(chatBotVersionList),
                    0
                )
            Y: =Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height - Self.Height
            ZIndex: =2

        Label_GPTv_Monthly_Default_AIGraph_TokenUsage_4 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =Text(ThisItem.Token_Total/1000, "#,###,###,##0K")
            Width: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4.Width
            X: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4.X
            Y: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4.Y - Self.Height
            ZIndex: =4

        "BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4 As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =Parent.Height - DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Height
            Items: |-
                =Filter(
                    Filter(AIGraphGPTvMonthlyUsage, Token_Model<>Blank()),
                    YearMonth=ThisItem.YearMonth
                )
            LoadingSpinner: =
            TemplatePadding: =0
            TemplateSize: =40
            Width: =40*CountRows(chatBotVersionList)
            X: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4.X + Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_4.Width
            ZIndex: =6

            Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: |-
                    =IfError(Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value,Color.Black,Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value)
                FocusedBorderThickness: =4
                Height: |-
                    =IfError(If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvMonthlyXAxis,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvMonthlyUsage,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    YearMonth=ThisItem.YearMonth,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvMonthlyXAxis,Token_Total)
                        ) * (Parent.Height - 20)
                    ),0,If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvMonthlyXAxis,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvMonthlyUsage,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    YearMonth=ThisItem.YearMonth,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvMonthlyXAxis,Token_Total)
                        ) * (Parent.Height - 20)
                    ))
                OnSelect: =Select(Parent)
                Visible: |-
                    =If(
                        LookUp(
                            Filter(
                                AIGraphGPTvMonthlyUsage,
                                Token_Model=ThisItem.Token_Model
                            ),
                            YearMonth=ThisItem.YearMonth,
                            Token_Total
                        ) = 0,
                        false,
                        true
                    )
                Width: =40
                Y: =Parent.Height - Self.Height
                ZIndex: =5

            Label_GPTv_Monthly_Default_AIGraph_TokenUsage_3 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(CSS_COMMON.colors.fg)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =20
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: |
                    =Text(
                        LookUp(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    Token_Model=ThisItem.Token_Model
                                ),
                                YearMonth=ThisItem.YearMonth,
                                Token_Total
                            )/1000, 
                        "#,###,###,##0K"
                    )
                Visible: |-
                    =If(
                        Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3.Height=0,
                        false,
                        true
                    )
                Width: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3.Width
                X: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3.X
                Y: =Bar_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_3.Y - Self.Height
                ZIndex: =6

        Line_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.bg2)
            FocusedBorderThickness: =4
            Height: =2
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =DateLabel_BarChart_GPTv_Default_Monthly_AIGraph_TokenUsage_1.Y-1
            ZIndex: =7

    BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2 As gallery.galleryHorizontal:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Height
        Items: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                If(
                    !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                    AIGraphGPTvDailyXAxis
                ),
                Blank()
            )
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =135
        Visible: |-
            =If(
                DatePickerSetting = false And AppsBIAxis.Value = "GPT 버전",
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                    true,
                    false
                ),
                false
            )
        Width: =BG_Graph_AIGraph_TokenUsage_1.Width - 100
        X: =LineChart_Default_Daily_AIGraph_TokenUsage_1.X + 20
        Y: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =22

        DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =125
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13
            Text: |-
                =Char(13) & Year(ThisItem.Token_Date)&"년" & 
                Char(13) & Month(ThisItem.Token_Date)&"월 " & Day(ThisItem.Token_Date)&"일"
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth
            Y: =Parent.Height-Self.Height
            ZIndex: =1

        Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4 As rectangle:
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.aigraphTotal)
            FocusedBorderThickness: =4
            Height: |-
                =IfError(If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyXAxis)),
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        (Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvDailyXAxis,
                                    Token_Date=ThisItem.Token_Date,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ),0,If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyXAxis)),
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        (Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvDailyXAxis,
                                    Token_Date=ThisItem.Token_Date,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ))
            OnSelect: =Select(Parent)
            Width: =40
            X: |-
                =If(
                    !IsError(Parent.TemplateWidth/10/CountRows(chatBotVersionList)),
                    Parent.TemplateWidth/10/CountRows(chatBotVersionList),
                    0
                )
            Y: =Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height - Self.Height
            ZIndex: =2

        Label_GPTv_Daily_Default_AIGraph_TokenUsage_4 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =/*If(
                    Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000,
                    Text(ThisItem.Token_Total, "#,###,###,##0"),
                    If(
                        Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000,
                        Text(ThisItem.Token_Total/1000, "#,###,###,##0K"),
                        If(
                            Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000000,
                            Text(ThisItem.Token_Total/1000000, "#,###,###,##0M"),
                            If(
                                Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000000000,
                                Text(ThisItem.Token_Total/1000000, "#,###,###,##0B")
                            )
                        )
                    )
                )*/
                
                Text(ThisItem.Token_Total/1000, "#,###,###,##0K")
            Visible: |-
                =If(
                    Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.Height<1,
                    false,
                    true
                )
            Width: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.Width
            X: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.X
            Y: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.Y-Self.Height
            ZIndex: =3

        "BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_3 As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =Parent.Height - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Height
            Items: |-
                =Filter(
                    AIGraphGPTvDailyUsage,
                    Token_Date=ThisItem.Token_Date,Token_Model<>Blank()
                )
            LoadingSpinner: =
            LoadingSpinnerColor: =RGBA(0, 0, 0, 0)
            TemplatePadding: =0
            TemplateSize: =40
            Width: =40*CountRows(chatBotVersionList)
            X: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.X + Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_4.Width
            ZIndex: =4

            Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_3 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: |-
                    =IfError(Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value,Color.BlueViolet,Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value)
                FocusedBorderThickness: =4
                Height: |-
                    =IfError(If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvDailyUsage,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    Token_Date_=ThisItem.Token_Date_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis,Token_Total)
                        ) * (Parent.Height - 20)
                    ),0,If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvDailyUsage,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    Token_Date_=ThisItem.Token_Date_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis,Token_Total)
                        ) * (Parent.Height - 20)
                    ))
                OnSelect: =Select(Parent)
                Visible: |-
                    =If(
                        LookUp(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                Token_Model=ThisItem.Token_Model
                            ),
                            Token_Date_=ThisItem.Token_Date_,
                            Token_Total
                        ) = 0,
                        false,
                        true
                    )
                Width: =40
                Y: =Parent.Height - Self.Height
                ZIndex: =3

            Label_GPTv_Daily_Default_AIGraph_TokenUsage_3 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(CSS_COMMON.colors.fg)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =20
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: |-
                    =/*If(
                        Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000,
                        Text(
                            LookUp(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    Token_Model=ThisItem.Token_Model
                                ),
                                Token_Date_=ThisItem.Token_Date_,
                                Token_Total
                            ), 
                            "#,###,###,##0"
                        ),
                        If(
                            Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000,
                            Text(
                                LookUp(
                                    Filter(
                                        AIGraphGPTvDailyUsage,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    Token_Date_=ThisItem.Token_Date_,
                                    Token_Total
                                )/1000, 
                                "#,###,###,##0K"
                            ),
                            If(
                                Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000000,
                                Text(
                                    LookUp(
                                        Filter(
                                            AIGraphGPTvDailyUsage,
                                            Token_Model=ThisItem.Token_Model
                                        ),
                                        Token_Date_=ThisItem.Token_Date_,
                                        Token_Total
                                    )/1000000, 
                                    "#,###,###,##0M"
                                ),
                                If(
                                    Max(AIGraphGPTvDailyXAxis, Token_Total) < 1000000000000,
                                    Text(
                                        LookUp(
                                            Filter(
                                                AIGraphGPTvDailyUsage,
                                                Token_Model=ThisItem.Token_Model
                                            ),
                                            Token_Date_=ThisItem.Token_Date_,
                                            Token_Total
                                        )/1000000000, 
                                        "#,###,###,##0B"
                                    )
                                )
                            )
                        )
                    )*/
                    
                    Text(
                        LookUp(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                Token_Model=ThisItem.Token_Model
                            ),
                            Token_Date_=ThisItem.Token_Date_,
                            Token_Total
                        )/1000, 
                        "#,###,###,##0K"
                    )
                Visible: |-
                    =If(
                        Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_3.Height=0,
                        false,
                        true
                    )
                Width: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_3.Width
                X: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_3.X
                Y: =Bar_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_3.Y-Self.Height
                ZIndex: =4

        Line_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.bg2)
            FocusedBorderThickness: =4
            Height: =2
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_TokenUsage_1.Y-1
            ZIndex: =5

    BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_2 As gallery.galleryHorizontal:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderStyle: =BorderStyle.None
        Height: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Height
        Items: |-
            =If(
                DatePickerSetting = true,
                Filter(
                    AIGraphGPTvDailyXAxis_Custom,
                    (
                        Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                    ) && (
                        Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                    )
                )
            )/*
            If(
                AppsBIAxis.Value = "GPT 버전" And (Dropdown_DatePicker_AIGraph_DEV_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_DEV_1.SelectedText.Value = "1년"),
                If(
                    !IsError(1/CountRows(AIGraphTokenMonthlyUsage)),
                    AIGraphTokenMonthlyXAxis
                ),
                Blank()
            )*/
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =135
        Visible: |-
            =If(
                DatePickerSetting = true And AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.Width
        X: =LineChart_Default_Daily_AIGraph_TokenUsage_1.X + 20
        Y: =LineChart_Default_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =23

        DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =125
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13
            Text: |-
                =Char(13) & Year(ThisItem.Token_Date)&"년" & 
                Char(13) & Month(ThisItem.Token_Date)&"월 " & Day(ThisItem.Token_Date)&"일"
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth
            Y: =Parent.Height-Self.Height
            ZIndex: =1

        Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4 As rectangle:
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.aigraphTotal)
            FocusedBorderThickness: =4
            Height: |-
                =IfError(If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyXAxis_Custom)),
                    If(
                        DatePickerSetting = true,
                        (Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis_Custom,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvDailyXAxis_Custom,
                                    Token_Date=ThisItem.Token_Date,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis_Custom,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ),0,If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyXAxis_Custom)),
                    If(
                        DatePickerSetting = true,
                        (Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis_Custom,Token_Total) - 
                                LookUp(
                                    AIGraphGPTvDailyXAxis_Custom,
                                    Token_Date=ThisItem.Token_Date,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis_Custom,Token_Total)
                        ) * (Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height - 20)
                    ), 0
                ))
            OnSelect: =Select(Parent)
            Width: =40
            X: |-
                =If(
                    !IsError(Parent.TemplateWidth/10/CountRows(chatBotVersionList)),
                    Parent.TemplateWidth/10/CountRows(chatBotVersionList),
                    0
                )
            Y: =Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height - Self.Height
            ZIndex: =2

        Label_GPTv_Custom_Daily_Default_AIGraph_TokenUsage_4 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =Text(ThisItem.Token_Total/1000, "#,###,###,##0K")
            Width: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4.Width
            X: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4.X
            Y: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4.Y - Self.Height
            ZIndex: =4

        "BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3 As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
            BorderColor: =RGBA(166, 166, 166, 1)
            BorderStyle: =BorderStyle.None
            Height: =Parent.Height - DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Height
            Items: |-
                =Filter(
                    AIGraphGPTvDailyUsage_Custom,
                    Token_Date=ThisItem.Token_Date,Token_Model<>Blank()
                )
            LoadingSpinner: =
            TemplatePadding: =0
            TemplateSize: =40
            Width: =40*CountRows(chatBotVersionList)
            X: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4.X + Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_4.Width
            ZIndex: =6

            Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: |-
                    =IfError(Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value,Color.BlueViolet,Index(
                        AIGraph_GPTv_ColorLists,
                        LookUp(
                            chatBotVersionList,
                            Value=ThisItem.Token_Model,
                            Index
                        )
                    ).Value)
                FocusedBorderThickness: =4
                Height: |-
                    =IfError(If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis_Custom,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvDailyUsage_Custom,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    Token_Date_=ThisItem.Token_Date_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis_Custom,Token_Total)
                        ) * (Parent.Height - 20)
                    ),0,If(
                        IsBlank(ThisItem.Token_Model),
                        0,
                        (Parent.Height - 20) - (
                            (
                                Max(AIGraphGPTvDailyXAxis_Custom,Token_Total) - 
                                LookUp(
                                    Filter(
                                        AIGraphGPTvDailyUsage_Custom,
                                        Token_Model=ThisItem.Token_Model
                                    ),
                                    Token_Date_=ThisItem.Token_Date_,
                                    Token_Total
                                )
                            ) / Max(AIGraphGPTvDailyXAxis_Custom,Token_Total)
                        ) * (Parent.Height - 20)
                    ))
                OnSelect: =Select(Parent)
                Visible: |-
                    =If(
                        !IsError(Index(chatBotVersionList,1).Value),
                        true,//Index(chatBotVersionList,1).Value
                        false
                    )
                Width: =40
                Y: =Parent.Height - Self.Height
                ZIndex: =5

            Label_GPTv_Custom_Daily_Default_AIGraph_TokenUsage_3 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(CSS_COMMON.colors.fg)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                Height: =20
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: |
                    =Text(
                        LookUp(
                                Filter(
                                    AIGraphGPTvDailyUsage_Custom,
                                    Token_Model=ThisItem.Token_Model
                                ),
                                Token_Date_=ThisItem.Token_Date_,
                                Token_Total
                            )/1000, 
                        "#,###,###,##0K"
                    )
                Visible: |-
                    =If(
                        Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3.Height = 0,
                        false,
                        true
                    )
                Width: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3.Width
                X: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3.X
                Y: =Bar_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_3.Y- Self.Height
                ZIndex: =6

        Line_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledFill: =ColorValue(CSS_COMMON.colors.bg2)
            Fill: =ColorValue(CSS_COMMON.colors.bg2)
            FocusedBorderThickness: =4
            Height: =2
            HoverFill: =ColorValue(CSS_COMMON.colors.bg2)
            OnSelect: =Select(Parent)
            PressedFill: =ColorValue(CSS_COMMON.colors.bg2)
            Width: =Parent.TemplateWidth
            Y: =DateLabel_BarChart_GPTv_Custom_Daily_AIGraph_TokenUsage_1.Y-1
            ZIndex: =7

    Label_Token_Input_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="Input Token"
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =200
        X: =1520
        Y: =Sep_Summ_AIGraph_TokenUsage_1.Y + 20
        ZIndex: =24

    Label_Token_Output_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="Output Token"
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =200
        X: =1520
        Y: =Label_Token_Input_AIGraph_TokenUsage_1.Y + Label_Token_Input_AIGraph_TokenUsage_1.Height + 20
        ZIndex: =25

    Label_Token_Total_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="Total Token"
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =200
        X: =1520
        Y: =Label_Token_Output_AIGraph_TokenUsage_1.Y + Label_Token_Output_AIGraph_TokenUsage_1.Height + 20
        ZIndex: =26

    Value_Token_Input_AIGraph_TokenUsage_1 As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |
            =Text(
                Int('[Hidden]Value_Token_Input_AIGraph_TokenUsage_1'.Text)/10,
                "###,###,###,##0.0# K"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        X: =Label_Token_Input_AIGraph_TokenUsage_1.X + Label_Token_Input_AIGraph_TokenUsage_1.Width
        Y: =Label_Token_Input_AIGraph_TokenUsage_1.Y
        ZIndex: =27

    Value_Token_Output_AIGraph_TokenUsage_1 As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |-
            =Text(
                Int('[Hidden]Value_Token_Output_AIGraph_TokenUsage_1'.Text)/10,
                "###,###,###,##0.0# K"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        X: =Label_Token_Output_AIGraph_TokenUsage_1.X + Label_Token_Output_AIGraph_TokenUsage_1.Width
        Y: =Label_Token_Output_AIGraph_TokenUsage_1.Y
        ZIndex: =28

    Value_Token_Total_AIGraph_TokenUsage_1 As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |-
            =Text(
                Int('[Hidden]Value_Token_Total_AIGraph_TokenUsage_1'.Text)/10,
                "###,###,###,##0.0# K"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        X: =Label_Token_Total_AIGraph_TokenUsage_1.X + Label_Token_Total_AIGraph_TokenUsage_1.Width
        Y: =Label_Token_Total_AIGraph_TokenUsage_1.Y
        ZIndex: =29

    Color_Token_Input_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,1).Value
        FocusedBorderThickness: =4
        Height: =5
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Input_AIGraph_TokenUsage_1.X - Self.Width
        Y: =Label_Token_Input_AIGraph_TokenUsage_1.Y+Label_Token_Input_AIGraph_TokenUsage_1.Height/2 - Self.Height/2
        ZIndex: =30

    Color_Token_Output_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,2).Value
        FocusedBorderThickness: =4
        Height: =5
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Output_AIGraph_TokenUsage_1.X - Self.Width
        Y: =Label_Token_Output_AIGraph_TokenUsage_1.Y+Label_Token_Output_AIGraph_TokenUsage_1.Height/2 - Self.Height/2
        ZIndex: =31

    Color_Token_Total_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,3).Value
        FocusedBorderThickness: =4
        Height: =5
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Total_AIGraph_TokenUsage_1.X - Self.Width
        Y: =Label_Token_Total_AIGraph_TokenUsage_1.Y+Label_Token_Total_AIGraph_TokenUsage_1.Height/2 - Self.Height/2
        ZIndex: =32

    "'[Hidden]Value_Token_Input_AIGraph_TokenUsage_1' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: |-
            =ColorValue("#242424")
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =20
        Text: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                    Sum(
                        Filter(
                            AIGraphTokenDailyUsage,
                            (
                                Token_Date >= Switch(
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                        "1개월",
                                    DateAdd(Today(),-1,TimeUnit.Months),
                                        "3개월",
                                    DateAdd(Today(),-3,TimeUnit.Months)
                                )
                            ) && (
                                Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                            )
                        ), Token_Input
                    )/100,
                If(
                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                    Sum(
                        Filter(
                            AIGraphTokenMonthlyUsage,
                            (
                                YearMonth >= 
                                Switch(
                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                        "6개월",
                                    Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                        "1년",
                                    Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),
                            YearMonth_ <> Blank()
                        ), Token_Input
                    )/100
                )),
            If(
                DatePickerSetting = true,
                Sum(
                    Filter(
                        AIGraphTokenDailyUsage_Custom,
                        (
                            Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                        ) && (
                            Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                        )
                    ),Token_Input
                )/100
            ))
        Visible: =false
        Width: =200
        X: =Label_Token_Input_AIGraph_TokenUsage_1.X + Label_Token_Input_AIGraph_TokenUsage_1.Width
        Y: =920
        ZIndex: =33

    "'[Hidden]Value_Token_Output_AIGraph_TokenUsage_1' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |
            =    If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphTokenDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                )
                            ), Token_Output
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphTokenMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank()
                            ), Token_Output
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphTokenDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                            )
                        ),Token_Output
                    )/100
                ))
        Visible: =false
        Width: =200
        X: =Label_Token_Output_AIGraph_TokenUsage_1.X + Label_Token_Output_AIGraph_TokenUsage_1.Width
        Y: =980
        ZIndex: =34

    "'[Hidden]Value_Token_Total_AIGraph_TokenUsage_1' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: |-
            =ColorValue("#242424")
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |-
            =    If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphTokenDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                )
                            ), Token_Total
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphTokenMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank()
                            ), Token_Total
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphTokenDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                            )
                        ),Token_Total
                    )/100
                ))
        Visible: =false
        Width: =200
        X: =Label_Token_Total_AIGraph_TokenUsage_1.X + Label_Token_Total_AIGraph_TokenUsage_1.Width
        Y: =1040
        ZIndex: =35

    "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_21' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: |-
            =ColorValue("#242424")
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Text: |-
            =    If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                )
                            ), Token_Total
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphGPTvMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank()
                            ), Token_Total
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphGPTvDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                            )
                        ),Token_Total
                    )/100
                ))
        Visible: =false
        Width: =200
        X: =Label_Token_Output_AIGraph_TokenUsage_1.X + Label_Token_Output_AIGraph_TokenUsage_1.Width
        Y: =980
        ZIndex: =36

    "Gallery_GPTv_Usage_AIGraph_TokenUsage_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =320
        Items: =chatBotVersionList
        Layout: =Layout.Vertical
        TemplatePadding: =0
        TemplateSize: =60
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And CountRows(chatBotVersionList) <> 0,
                true,
                false
            )
        Width: =Color_GPTv_Total_AIGraph_TokenUsage_3.Width + Label_GPTv_Total_AIGraph_TokenUsage_3.Width + Value_GPTv_Total_AIGraph_TokenUsage_3.Width
        X: =Color_GPTv_Total_AIGraph_TokenUsage_3.X
        Y: =Label_GPTv_Total_AIGraph_TokenUsage_3.Y + Label_GPTv_Total_AIGraph_TokenUsage_3.Height + 10
        ZIndex: =37

        Color_GPTv_Total_AIGraph_TokenUsage_4 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: |-
                =IfError(Index(
                    AIGraph_GPTv_ColorLists,
                    LookUp(
                        chatBotVersionList,
                        Value=ThisItem.Value,
                        Index
                    )
                ).Value,Color.Black,Index(
                    AIGraph_GPTv_ColorLists,
                    LookUp(
                        chatBotVersionList,
                        Value=ThisItem.Value,
                        Index
                    )
                ).Value)
            FocusedBorderThickness: =4
            Height: |
                =10
            OnSelect: =Select(Parent)
            Width: =30
            X: =Label_GPTv_Total_AIGraph_TokenUsage_4.X - Self.Width - 5
            Y: =Label_GPTv_Total_AIGraph_TokenUsage_4.Y+Label_GPTv_Total_AIGraph_TokenUsage_4.Height/2 - Self.Height/2
            ZIndex: =1

        Label_GPTv_Total_AIGraph_TokenUsage_4 As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: |
                =40
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: |-
                =Upper(
                    If(
                        IsBlank(Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")),
                        "gpt3.5",
                        Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")
                    )
                )
            Width: =200
            X: =Color_GPTv_Total_AIGraph_TokenUsage_4.Width + 5
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =2

        Value_GPTv_Total_AIGraph_TokenUsage_4 As label:
            Align: =Align.Right
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =Label_GPTv_Total_AIGraph_TokenUsage_4.Height
            OnSelect: =Select(Parent)
            Text: |-
                =Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_20'.Text)/10,
                    "###,###,###,##0.0# K"
                )
            Width: |
                =150
            X: =Label_GPTv_Total_AIGraph_TokenUsage_4.X + Label_GPTv_Total_AIGraph_TokenUsage_4.Width-5
            Y: =Label_GPTv_Total_AIGraph_TokenUsage_4.Y
            ZIndex: =3

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_20' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            Size: =13
            Text: |-
                =If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                ),
                                Token_Model=ThisItem.Value
                            ), Token_Total
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphGPTvMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank(),
                                Token_Model=ThisItem.Value
                            ), Token_Total
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphGPTvDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                            ),
                            Token_Model=ThisItem.Value
                        ),Token_Total
                    )/100
                ))
            Visible: =false
            X: =250
            Y: =65
            ZIndex: =4

    Color_GPTv_Total_AIGraph_TokenUsage_3 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: |-
            =ColorValue("#FFDDB3")
        FocusedBorderThickness: =4
        Height: =10
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =30
        X: =Label_GPTv_Total_AIGraph_TokenUsage_3.X - Self.Width
        Y: =Label_GPTv_Total_AIGraph_TokenUsage_3.Y + Label_GPTv_Total_AIGraph_TokenUsage_3.Height/2 - Self.Height/2
        ZIndex: =38

    Label_GPTv_Total_AIGraph_TokenUsage_3 As label:
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        PaddingBottom: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="Token Total"
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =200
        X: =1520
        Y: =Sep_Summ_AIGraph_TokenUsage_1.Y + 20
        ZIndex: =39

    Value_GPTv_Total_AIGraph_TokenUsage_3 As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Label_GPTv_Total_AIGraph_TokenUsage_3.Height
        Text: |-
            =Text(
                Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_21'.Text)/10,
                "###,###,###,###,##0.0# K"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        X: =Label_GPTv_Total_AIGraph_TokenUsage_3.X + Label_GPTv_Total_AIGraph_TokenUsage_3.Width-5
        Y: =Label_GPTv_Total_AIGraph_TokenUsage_3.Y
        ZIndex: =40

    PieChart_GPTv_Usage_AIGraph_TokenUsage_1 As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_GPTv_ColorLists
        Items: |-
            =[
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text) / (
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18'.Text) +
                    Int('[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19'.Text)
                ) * 100, "##.0#%")
            ]
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        ShowLabels: =false
        Size: =15
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Width
        X: =PieChart_Token_Usage_AIGraph_TokenUsage_1.X
        Y: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Y
        ZIndex: =41

    PieChart_Token_Usage_AIGraph_TokenUsage_1 As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =450
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =[
                Text(
                    Int('[Hidden]Value_Token_Input_AIGraph_TokenUsage_1'.Text) / (
                    Int('[Hidden]Value_Token_Input_AIGraph_TokenUsage_1'.Text) +
                    Int('[Hidden]Value_Token_Output_AIGraph_TokenUsage_1'.Text)
                ) * 100, "#0.0#%"),
                Text(
                    Int('[Hidden]Value_Token_Output_AIGraph_TokenUsage_1'.Text) / (
                    Int('[Hidden]Value_Token_Input_AIGraph_TokenUsage_1'.Text) +
                    Int('[Hidden]Value_Token_Output_AIGraph_TokenUsage_1'.Text)
                ) * 100, "#0.0#%")
            ]
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        ShowLabels: =false
        Size: =15
        Visible: |-
            =If(
                AppsBIAxis.Value = "토큰",
                true,
                false
            )
        Width: =450
        X: =1450
        Y: =240
        ZIndex: =42

    Label_PieChart_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =Label_GraphTitle_AIGraph_TokenUsage_1.Height
        Size: =20
        Text: =First(똑실이_ChatbotText_table).BotName & " 사용 비율"
        Width: =212
        X: =1480
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y
        ZIndex: =43

    "BarChart_LV1Category_Daily_AIGraph_TokenUsage_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DelayItemLoading: =true
        Height: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.Height
        Items: =AIGraphCategoryLV1Usage
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: |-
            =IfError(
                Self.Height/CountRows(AIGraphCategoryLV1Usage),
                0,
                If(
                    CountRows(AIGraphCategoryLV1Usage) = 1, 
                    80,
                    If(
                        Self.Height/CountRows(AIGraphCategoryLV1Usage) < 60,
                        60,
                        Self.Height/CountRows(AIGraphCategoryLV1Usage)
                    )
                )
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And SelectedLV1_AIGraph = "전체",
                true,
                false
            )
        Width: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.Width
        X: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.X
        Y: =BarChart_GPTv_Default_Daily_AIGraph_TokenUsage_2.Y
        ZIndex: =53

        Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Category_LV1
            Width: =135
            Y: =1
            ZIndex: =2

        Bar_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: |-
                =IfError(
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            AIGraphCategoryLV1Usage,
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            AIGraphCategoryLV1Usage,
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value
                )
            FocusedBorderThickness: =4
            Height: =1
            Width: |-
                =IfError((Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - 20) - (
                        (
                            Max(Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),Token_Total) - 
                            LookUp(
                                Filter(
                                    Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),
                                    Category_LV1=ThisItem.Category_LV1
                                ),
                                Category_LV1=ThisItem.Category_LV1,
                                Token_Total
                            )
                        ) / Max(Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),Token_Total)
                    ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - 20),0,(Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - 20) - (
                        (
                            Max(Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),Token_Total) - 
                            LookUp(
                                Filter(
                                    Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),
                                    Category_LV1=ThisItem.Category_LV1
                                ),
                                Category_LV1=ThisItem.Category_LV1,
                                Token_Total
                            )
                        ) / Max(Filter(
                    AIGraphCategoryLV1Usage,
                    Category_LV1 <> Blank()
                ),Token_Total)
                    ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - 20))
            X: =Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.X + Label_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width + 20
            ZIndex: =3

        Value_BarChart_LV1Category_Daily_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =Text(ThisItem.Token_Total/1000, "###,###,###,##0.0# K")
            Width: =135
            X: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - Self.Width - 20
            Y: =1
            ZIndex: =4

    "BarChart_LV2Category_Daily_AIGraph_TokenUsage_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DelayItemLoading: =true
        Height: =675
        Items: =AIGraphCategoryLV2Usage
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =60
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And SelectedLV1_AIGraph <> "전체",
                true,
                false
            )
        Width: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width
        X: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.X
        Y: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Y
        ZIndex: =54

        Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Category_LV2
            Width: =135
            Y: =5
            ZIndex: =2

        Bar_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: |-
                =IfError(
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value
                )
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =IfError((Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Width - 20) - (
                    (
                        Max(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),Token_Total
                        ) - 
                        LookUp(
                            Filter(
                                Filter(
                                    AIGraphCategoryLV2Usage,
                                    Category_LV2 <> Blank()
                                ),
                                Category_LV2=ThisItem.Category_LV2
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Token_Total
                        )
                    ) / Max(
                        Filter(
                            AIGraphCategoryLV2Usage,
                            Category_LV2 <> Blank()
                        ),Token_Total
                    )
                ) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Width - 20),0,(Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Width - 20) - (
                    (
                        Max(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),Token_Total
                        ) - 
                        LookUp(
                            Filter(
                                Filter(
                                    AIGraphCategoryLV2Usage,
                                    Category_LV2 <> Blank()
                                ),
                                Category_LV2=ThisItem.Category_LV2
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Token_Total
                        )
                    ) / Max(
                        Filter(
                            AIGraphCategoryLV2Usage,
                            Category_LV2 <> Blank()
                        ),Token_Total
                    )
                ) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Width - 20))
            X: =Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.X + Label_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Value_BarChart_LV2Category_Daily_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =Text(ThisItem.Token_Total/1000, "###,###,###,##0.0# K")
            Width: =135
            X: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Width - Self.Width - 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =4

    "'[Hidden]Group_Value_GPTv_Total_AIGraph_TokenUsage_1' As group":
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =54

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_11' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,1).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,1).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =44

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_12' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,2).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,2).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =45

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_13' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,3).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,3).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =46

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_14' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,4).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,4).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =47

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_15' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,5).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,5).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =48

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_16' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,6).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,6).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =49

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_17' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,7).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,7).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =50

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_18' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,8).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,8).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =51

        "'[Hidden]Value_GPTv_Total_AIGraph_TokenUsage_19' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,9).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,9).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =52

    PieChart_LV1Category_Usage_AIGraph_TokenUsage_1 As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: =AIGraphCategoryLV1Usage
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        ShowLabels: =false
        Size: =15
        Visible: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Visible
        Width: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Width
        X: =PieChart_Token_Usage_AIGraph_TokenUsage_1.X
        Y: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Y
        ZIndex: =55

    PieChart_LV2Category_Usage_AIGraph_TokenUsage_1 As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: =AIGraphCategoryLV2Usage
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        ShowLabels: =false
        Size: =15
        Visible: =BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Visible
        Width: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Width
        X: =PieChart_Token_Usage_AIGraph_TokenUsage_1.X
        Y: =PieChart_Token_Usage_AIGraph_TokenUsage_1.Y
        ZIndex: =56

    "BarChart_LV1Category_Detail_AIGraph_TokenUsage_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DelayItemLoading: =true
        Height: =325
        Items: =AIGraphCategoryLV1Usage
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =BarChart_LV1Category_Daily_AIGraph_TokenUsage_1.Visible
        Width: =395
        X: =1480
        Y: =670
        ZIndex: =57

        Label_BarChart_LV1Category_Detail_AIGraph_TokenUsage_1 As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Category_LV1
            Width: |
                =160
            X: =Color_BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.X + Color_BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.Width + 10
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =1

        Value_BarChart_LV1Category_Detail_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: |-
                =ThisItem.Token_UsageRate & "  ( " & Text(ThisItem.Token_Total/1000, "###,###,###,##0.0# K") & " )    "
            Width: =200
            X: =Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Color_BarChart_LV1Category_Detail_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            Fill: |-
                =IfError(
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1Usage,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1Usage,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value
                )
            Height: =10
            OnSelect: =Select(Parent)
            Visible: =Parent.Visible
            Width: =30
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =6

    Dropdown_AxisPicker_AIGraph_TokenUsage_1 As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =First(AxisPickingList).Value
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_TokenUsage_1.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =AxisPickingList
        OnChange: |-
            =Set(AppsBIAxis, Self.Selected);
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE);
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Reset(Dropdown_DatePicker_AIGraph_TokenUsage_1);
            Select(Button_Table_Filtering_AIGraph_TokenUsage_1);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Reset: =If(Self.Visible=true, true, false)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: =DatePicker_FirstDate_AIGraph_TokenUsage_1.Width
        X: =Label_RadioFilter_Category_AIGraph_TokenUsage_1.X + Label_RadioFilter_Category_AIGraph_TokenUsage_1.Width + 8
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Y
        ZIndex: =58

    Label_GraphTitle_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Bold
        Height: =28
        Size: =20
        Text: =Dropdown_AxisPicker_AIGraph_TokenUsage_1.Selected.Value & " 사용량"
        Width: =600
        X: =Label_GalleryFilter_Category_AIGraph_TokenUsage_1.X
        Y: =240
        ZIndex: =59

    Sep_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =1073
        X: =Label_GraphTitle_AIGraph_TokenUsage_1.X
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y + Label_GraphTitle_AIGraph_TokenUsage_1.Height + 16
        ZIndex: =60

    Sep_Summ_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Sep_PieChart_AIGraph_TokenUsage_1.X
        Y: =650
        ZIndex: =61

    "BarChart_LV2Category_Detail_AIGraph_TokenUsage_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DelayItemLoading: =true
        Height: =BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.Height
        Items: |-
            =If(
                Max(AIGraphCategoryLV2Usage, Token_Total)=0 Or IsBlank(AIGraphCategoryLV2Usage),
                Blank(),
                AIGraphCategoryLV2Usage
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =BarChart_LV2Category_Daily_AIGraph_TokenUsage_1.Visible
        Width: =BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.Width
        X: =BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.X
        Y: =BarChart_LV1Category_Detail_AIGraph_TokenUsage_1.Y
        ZIndex: =62

        Label_BarChart_LV2Category_Detail_AIGraph_TokenUsage_1 As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Category_LV2
            Width: =200
            X: =Color_BarChart_LV2Category_Detail_AIGraph_TokenUsage_1.X + Color_BarChart_LV2Category_Detail_AIGraph_TokenUsage_1.Width + 10
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =1

        Value_BarChart_LV2Category_Detail_AIGraph_TokenUsage_1 As label:
            Align: =Align.Right
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: |-
                =ThisItem.Token_UsageRate & "  ( " & Text(ThisItem.Token_Total/1000, "###,###,###,##0.0# K") & " )    "
            Width: =200
            X: =Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Color_BarChart_LV2Category_Detail_AIGraph_TokenUsage_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            Fill: |-
                =IfError(
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraph_ColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2Usage,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value
                )
            Height: =10
            OnSelect: =Select(Parent)
            Visible: =Parent.Visible
            Width: =30
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =6

    AlertMSG_AIGraph_TokenUsage_1 As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Bold
        Height: =28
        Size: =10
        Text: =" *저장된 데이터에 기반한 차트로, 실제 사용량과는 차이가 있을 수 있습니다."
        Width: |
            =800
        X: =1086
        Y: =78
        ZIndex: =63

    Label_Alert_NoData_AIGraph_TokenUsage_3 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =735
        Size: =15
        Text: |-
            =If(
                locLoadingSpinner=true,
                "데이터를 분석하고 있습니다.",
                If(
                    Switch(
                        AppsBIAxis.Value,
                        "토큰",
                            (
                                CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphTokenDailyUsage,
                                                (
                                                    Token_Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphTokenMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphTokenDailyUsage_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    )
                                ) = 1 && Max(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphTokenDailyUsage,
                                                (
                                                    Token_Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphTokenMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphTokenDailyUsage_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    ),
                                    Token_Total
                                ) = 0
                                ) Or (IsError(
                                    CountRows(
                                        If(
                                            DatePickerSetting = false,
                                            If(
                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                                                Filter(
                                                    AIGraphTokenDailyUsage,
                                                    (
                                                        Token_Date >= Switch(
                                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                "1개월",
                                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                                "3개월",
                                                            DateAdd(Today(),-3,TimeUnit.Months)
                                                        )
                                                    ) && (
                                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                    )
                                                ),
                                                If(
                                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                                                    Filter(
                                                        AIGraphTokenMonthlyUsage,
                                                        (
                                                            YearMonth >= 
                                                            Switch(
                                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                    "6개월",
                                                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                    "1년",
                                                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                            )
                                                        ) &&
                                                        (
                                                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                        ),YearMonth_ <> Blank()
                                                    )
                                                )
                                            ),
                                            Filter(
                                                AIGraphTokenDailyUsage_Custom,
                                                (
                                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                                ) && (
                                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                                )
                                            )
                                        )
                                    )
                                )
                            ) Or (IsBlank(
                                    CountRows(
                                        If(
                                            DatePickerSetting = false,
                                            If(
                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                                                Filter(
                                                    AIGraphTokenDailyUsage,
                                                    (
                                                        Token_Date >= Switch(
                                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                "1개월",
                                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                                "3개월",
                                                            DateAdd(Today(),-3,TimeUnit.Months)
                                                        )
                                                    ) && (
                                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                    )
                                                ),
                                                If(
                                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                                                    Filter(
                                                        AIGraphTokenMonthlyUsage,
                                                        (
                                                            YearMonth >= 
                                                            Switch(
                                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                    "6개월",
                                                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                    "1년",
                                                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                            )
                                                        ) &&
                                                        (
                                                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                        ),YearMonth_ <> Blank()
                                                    )
                                                )
                                            ),
                                            Filter(
                                                AIGraphTokenDailyUsage_Custom,
                                                (
                                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                                ) && (
                                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                                )
                                            )
                                        )
                                    )
                                )
                            ) Or (CountRows(
                                        If(
                                            DatePickerSetting = false,
                                            If(
                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                                                Filter(
                                                    AIGraphTokenDailyUsage,
                                                    (
                                                        Token_Date >= Switch(
                                                            Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                "1개월",
                                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                                "3개월",
                                                            DateAdd(Today(),-3,TimeUnit.Months)
                                                        )
                                                    ) && (
                                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                    )
                                                ),
                                                If(
                                                    Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                                                    Filter(
                                                        AIGraphTokenMonthlyUsage,
                                                        (
                                                            YearMonth >= 
                                                            Switch(
                                                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                                                    "6개월",
                                                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                    "1년",
                                                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                            )
                                                        ) &&
                                                        (
                                                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                        ),YearMonth_ <> Blank()
                                                    )
                                                )
                                            ),
                                            Filter(
                                                AIGraphTokenDailyUsage_Custom,
                                                (
                                                    Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                                ) && (
                                                    Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                                )
                                            )
                                        )
                                    )
                                =0
                            ),
                        "GPT 버전",
                            (
                                CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                                            If(
                                                !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                                                AIGraphGPTvDailyXAxis
                                            ),
                                            If(
                                                (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                                                If(
                                                    !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                                                    AIGraphGPTvMonthlyXAxis
                                                ),
                                                Blank()
                                            )
                                        ),
                                        Filter(
                                            AIGraphGPTvDailyXAxis_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    )
                                ) = 1 && Max(
                                If(
                                    DatePickerSetting = false,
                                    If(
                                        (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                                        If(
                                            !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                                            AIGraphGPTvDailyXAxis
                                        ),
                                        If(
                                            (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                                            If(
                                                !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                                                AIGraphGPTvMonthlyXAxis
                                            ),
                                            Blank()
                                        )
                                    ),
                                    Filter(
                                        AIGraphGPTvDailyXAxis_Custom,
                                        (
                                            Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                        ) && (
                                            Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                        )
                                    )
                                ), Token_Total
                                ) = 0
                            ) Or (IsError(
                                CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                                            If(
                                                !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                                                AIGraphGPTvDailyXAxis
                                            ),
                                            If(
                                                (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                                                If(
                                                    !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                                                    AIGraphGPTvMonthlyXAxis
                                                ),
                                                Blank()
                                            )
                                        ),
                                        Filter(
                                            AIGraphGPTvDailyXAxis_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    )
                                ))
                            ) Or (IsBlank(
                                CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                                            If(
                                                !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                                                AIGraphGPTvDailyXAxis
                                            ),
                                            If(
                                                (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                                                If(
                                                    !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                                                    AIGraphGPTvMonthlyXAxis
                                                ),
                                                Blank()
                                            )
                                        ),
                                        Filter(
                                            AIGraphGPTvDailyXAxis_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    )
                                ))
                            ) Or (CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월"),
                                            If(
                                                !IsError(1/CountRows(AIGraphGPTvDailyUsage)),
                                                AIGraphGPTvDailyXAxis
                                            ),
                                            If(
                                                (Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년"),
                                                If(
                                                    !IsError(1/CountRows(AIGraphGPTvMonthlyXAxis)),
                                                    AIGraphGPTvMonthlyXAxis
                                                ),
                                                Blank()
                                            )
                                        ),
                                        Filter(
                                            AIGraphGPTvDailyXAxis_Custom,
                                            (
                                                Token_Date >= DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                                            ) && (
                                                Token_Date <= DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate //
                                            )
                                        )
                                    )
                                )=0
                            ),
                        "카테고리",
                            (
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Selected.Value="전체",
                                        AIGraphCategoryLV1Usage,
                                        AIGraphCategoryLV2Usage
                                    )
                                ) = 1 && Max(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Selected.Value="전체",
                                        AIGraphCategoryLV1Usage,
                                        AIGraphCategoryLV2Usage
                                    ),Token_Total
                                ) = 0
                            ) Or (IsError(
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Selected.Value="전체",
                                        AIGraphCategoryLV1Usage,
                                        AIGraphCategoryLV2Usage
                                    )
                                )
                            )) Or (IsBlank(
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Selected.Value="전체",
                                        AIGraphCategoryLV1Usage,
                                        AIGraphCategoryLV2Usage
                                    )
                                )
                            )) Or (CountRows(
                                (
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage_1.Selected.Value="전체",
                                        AIGraphCategoryLV1Usage,
                                        AIGraphCategoryLV2Usage
                                    )
                                )
                            )=0)
                    ),
                    "데이터가 없습니다."
                )
            )
        Visible: |-
            =If(
                Self.Text = "데이터가 없습니다." Or Self.Text = "데이터를 분석하고 있습니다.",
                true,
                false
            )
        Width: =1081
        X: =340
        Y: =305
        ZIndex: =65

    Label_Alert_NoData_AIGraph_TokenUsage_4 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =Label_Alert_NoData_AIGraph_TokenUsage_3.Height
        Size: =15
        Text: =Label_Alert_NoData_AIGraph_TokenUsage_3.Text
        Visible: |-
            =If(
                Self.Text = "데이터가 없습니다." Or Self.Text = "데이터를 분석하고 있습니다.",
                true,
                false
            )
        Width: =415
        X: =1465
        Y: =Label_Alert_NoData_AIGraph_TokenUsage_3.Y
        ZIndex: =66

    LoadingSpinner_AIGraph_TokenUsage_1 As image:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderThickness: =4
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverFill: =RGBA(0, 0, 0, 0)
        Image: ='6-dots-rotate'
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedFill: =RGBA(0, 0, 0, 0)
        Visible: =locLoadingSpinner
        X: =977
        Y: =474
        ZIndex: =67

    ButtonCanvas5 As 버튼:
        BasePaletteColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |+
            =UpdateContext({ 
                locLoadingSpinner: true
            });
            
            Concurrent(
                Set(AIGraphStartDate,
                    Text(If(
                            DatePickerSetting = false,
                            Switch(
                                Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                "1년", DateAdd(Today(),-12,TimeUnit.Months)
                            ), DatePicker_FirstDate_AIGraph_TokenUsage_1.SelectedDate
                        ), "yyyy-mm-dd"
                    )
                ),
                Set(AIGraphEndDate,
                    Text(If(
                        DatePickerSetting = false,
                        DateAdd(Today(),-0,TimeUnit.Months),
                        DatePicker_LastDate_AIGraph_TokenUsage_1.SelectedDate
                    ), "yyyy-mm-dd")),
                Set(AIGraphPeriodType,Dropdown_DatePicker_AIGraph_TokenUsage_1.SelectedText.Value),
                Set(AIGraphAnalysisType,Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value)
            );
            
            
            UpdateContext({AIGraphResponse: '[DEV]똑실이-[Apps]AIGraph토큰사용성분석V2'.Run(
                    If(
                        // LV1=전체 LV2=전체 일경우
                        SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                        SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                        "/?" & Substitute(Concatenate(Concat(LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1), Category_LV1LV2 & "?"),"delete_point"),"?delete_point",""),
                        If(
                            // 카테고리LV1만 선택한 경우
                            SelectedLV1_AIGraph <> DEFAULT_CATEGORY_VALUE && 
                            SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                            Substitute(Concatenate(Concat(Filter(
                                    LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                    Category_LV1 = SelectedLV1_AIGraph
                                ), Category_LV1LV2 & "?"
                            ),"delete_point"), "?delete_point", ""),
                            // 카테고리LV2만 선택한 경우
                            If(
                                SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                                SelectedLV2_AIGraph <> DEFAULT_CATEGORY_VALUE,
                                Substitute(Concatenate(Concat(Filter(
                                        LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                        Category_LV2 = SelectedLV2_AIGraph
                                    ), Category_LV1LV2 & "?"
                                ), "delete_point"), "?delete_point",""),
                                // LV1, LV2 둘다 선택한 경우
                                SelectedLV1_AIGraph & "/" & SelectedLV2_AIGraph
                            )
                        )
                    )
                    ,AIGraphPeriodType,
                    AIGraphAnalysisType,
                    {
                    // StartDate
                    text_1: AIGraphStartDate,
                    // EndDate
                    text_2: AIGraphEndDate
                }
            
                ).result_json
            });
            
            ClearCollect(
                AIGraphToken,
                ForAll(
                    Table(ParseJSON(AIGraphResponse)),
                    {   category_lv1:Text(ThisRecord.Value.category_lv1),
                        category_lv2:Text(ThisRecord.Value.category_lv2),
            
                        //Token_Date_: Text(Year(ThisRecord.Value.group_by)&"년"&Month(ThisRecord.Value.group_by)&"월"&Day(ThisRecord.Value.group_by)&"일"),
                        //Token_Date: Date(Year(ThisRecord.Value.group_by), Month(ThisRecord.Value.group_by), Day(ThisRecord.Value.group_by)),
                        Token_Input: Text(ThisRecord.Value.sum_prompt_tokens),
                        Token_Output: Text(ThisRecord.Value.sum_completion_tokens),
                        Token_Total: Text(ThisRecord.Value.sum_total_tokens)
                        
                    }
                )
            );
            
            
            UpdateContext({ 
                locLoadingSpinner: false
            });
            
        Text: ="dev pa"
        Width: =96
        X: =965
        Y: =8
        ZIndex: =69

    ButtonCanvas4 As 버튼:
        DisplayMode: =DisplayMode.Edit
        Height: =32
        OnSelect: |
            =//ClearCollect(groupbylv1, GroupBy(AIGraphToken,"category_lv1","groupbycatelv1") );
            //AddColumns(groupbylv1,"sum", ForAll(ThisRecord.groupbycatelv1,Sum(Token_Total)));
            
            
            
            ClearCollect(
                tokengroupbyLV1,
                DropColumns(
                    AddColumns(
                    AddColumns(
                    AddColumns(
                        GroupBy(AIGraphToken,"category_lv1","GroupedItems"),
                    "sumtotal",Sum(GroupedItems,Token_Total)
                    ),"suminput",Sum(GroupedItems,Token_Input)),
                    "sumoutput",Sum(GroupedItems,Token_Output))
                    ,
                "GroupedItems"
                )
            );
            
            ClearCollect(
                tokengroupbyLV2,
                DropColumns(
                    AddColumns(
                    AddColumns(
                    AddColumns(
                        GroupBy(Filter(AIGraphToken,category_lv1="1현동철테스트"),"category_lv2","GroupedItems"),
                    "sumtotal",Sum(GroupedItems,Token_Total)
                    ),"suminput",Sum(GroupedItems,Token_Input)),
                    "sumoutput",Sum(GroupedItems,Token_Output))
                    ,
                "GroupedItems"
                )
            );
        Text: ="groupbycate"
        Width: =152
        X: =1115
        Y: =36
        ZIndex: =70

