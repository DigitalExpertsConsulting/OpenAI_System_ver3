AIGraph_UserSatisf As screen:
    Fill: =ColorValue(CSS_COMMON.colors.bg2)
    LoadingSpinnerColor: =RGBA(105, 121, 126, 1)
    OnHidden: |-
        =Concurrent(
            Set(gblStartPage,"AIGraph_UserSatisf"),
            Clear(AIGraphToken)
        )
    OnVisible: |
        =//============================== << 화면 최초 접속 시 >> ==============================
        // 1. 로딩 이미지 활성화
        Concurrent(
            UpdateContext({locLoadingSpinner:true}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:true})
        ); // 로딩 스피너 배경 이미지 비활성 );
            
        // 2. 초기화
        Set(AxisPickingList, ["기간", "GPT 버전", "카테고리"]); 
        Concurrent(
            Refresh(똑실이_QA_table),       // DB REFRESH
            UpdateContext({locPopupBackground:false}),  // 팝업 배경 이미지 비활성화
        
            Set(DatePickerSetting, false),
            
            
            ClearCollect(
                colCategoryAdmin,
                {Category_LV1: DEFAULT_CATEGORY_VALUE, Category_LV2: DEFAULT_CATEGORY_VALUE, LV1Order: 0, CategoryType: "None"},
                ForAll(
                    Table(ParseJSON('똑실이-[Apps]Lv1권한할당카테고리목록'.Run(User().Email).assigned_categories)),
                    {
                        Category_LV1: Text(ThisRecord.Value.Category_LV1),
                        Category_LV2: Text(ThisRecord.Value.Category_LV2),
                        Category_LV1LV2: Text(ThisRecord.Value.Category_LV1) & "/" & Text(ThisRecord.Value.Category_LV2)
                    }
                )
            );
        );
        
        //============================== << 필터 초기화 및 로딩이미지 비활성화 >> ==============================
        Reset(Dropdown_AxisPicker_AIGraph_UserSatisf);
        Set(AppsBIAxis, Dropdown_AxisPicker_AIGraph_UserSatisf.Selected);
        Concurrent(
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(AIGraphAxis, First(AxisPickingList)),
        
            Reset(Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf),
            Reset(Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf),
            Reset(Dropdown_DatePicker_AIGraph_UserSatisf),
            Reset(DatePicker_FirstDate_AIGraph_UserSatisf),
            Reset(DatePicker_LastDate_AIGraph_UserSatisf)
        );
        
        Select(Button_Table_Filtering_AIGraph_UserSatisf);
        
        Concurrent(
            UpdateContext({locLoadingSpinner:false}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:false}) // 로딩 스피너 배경 이미지 비활성
        );

    Component_GNB_AIGraph_UserSatisf As New_Component_GNB:

    Label_AIGraphMain_AIGraph_UserSatisf As Component_Main_Title:
        ScreenTitle: =First(똑실이_ChatbotText_table).BotName & " 사용 분석"
        X: =330
        ZIndex: =2

    BG_Summ_AIGraph_UserSatisf As Component_Container:
        Height: =870
        Width: =465
        X: =BG_Graph_AIGraph_UserSatisf.X + BG_Graph_AIGraph_UserSatisf.Width - 20
        Y: =198
        ZIndex: =3

    BG_Filtering_AIGraph_UserSatisf As Component_Container:
        Height: =120
        Width: =1556 + 40
        X: =Label_AIGraphMain_AIGraph_UserSatisf.X - 20
        Y: =Label_AIGraphMain_AIGraph_UserSatisf.Y + Label_AIGraphMain_AIGraph_UserSatisf.Height -5
        ZIndex: =4

    BG_Graph_AIGraph_UserSatisf As Component_Container:
        Height: =870
        Width: =1151
        X: =Label_AIGraphMain_AIGraph_UserSatisf.X - 20
        Y: =198
        ZIndex: =5

    Button_Table_Filtering_AIGraph_UserSatisf As button:
        BorderColor: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(105, 121, 126, 1)
        FocusedBorderColor: =ColorFade(Self.Fill, -75%)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
        OnSelect: |-
            =UpdateContext({ 
                locLoadingSpinner: true
            });
            
            Concurrent(
                Set(AIGraphStartDate,
                    Text(If(
                            DatePickerSetting = false,
                            Switch(
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                "1년", DateAdd(Today(),-12,TimeUnit.Months)
                            ), DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                        ), "yyyy-mm-dd"
                    )
                ),
                Set(AIGraphEndDate,
                    Text(If(
                        DatePickerSetting = false,
                        DateAdd(Today(),-0,TimeUnit.Months),
                        DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate
                    ), "yyyy-mm-dd"))
            );
            
            UpdateContext({AIGraphResponse: '똑실이-[Apps]AIGraphQALog분석V2'.Run(
                    If(
                        // LV1=전체 LV2=전체 일경우
                        SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                        SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                        "/?" & Substitute(Concatenate(Concat(LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1), Category_LV1LV2 & "?"),"delete_point"),"?delete_point",""),
                        If(
                            // 카테고리LV1만 선택한 경우
                            SelectedLV1_AIGraph <> DEFAULT_CATEGORY_VALUE && 
                            SelectedLV2_AIGraph = DEFAULT_CATEGORY_VALUE,
                            Substitute(Concatenate(Concat(Filter(
                                    LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                    Category_LV1 = SelectedLV1_AIGraph
                                ), Category_LV1LV2 & "?"
                            ),"delete_point"), "?delete_point", ""),
                            // 카테고리LV2만 선택한 경우
                            If(
                                SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE && 
                                SelectedLV2_AIGraph <> DEFAULT_CATEGORY_VALUE,
                                Substitute(Concatenate(Concat(Filter(
                                        LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                        Category_LV2 = SelectedLV2_AIGraph
                                    ), Category_LV1LV2 & "?"
                                ), "delete_point"), "?delete_point",""),
                                // LV1, LV2 둘다 선택한 경우
                                SelectedLV1_AIGraph & "/" & SelectedLV2_AIGraph
                            )
                        )
                    )
                    ,{
                    // StartDate
                    text_1: AIGraphStartDate,
                    // EndDate
                    text_2: AIGraphEndDate
                }).result_json
            });
            
            ClearCollect(
                AIGraphUserSatisf,
                ForAll(
                    Table(ParseJSON(AIGraphResponse)),
                    {
                        Category_LV1: Text(If(ThisRecord.Value.Category_LV1=Blank() Or ThisRecord.Value.Category_LV1="카테고리", "카테고리 미선택", ThisRecord.Value.Category_LV1)),
                        Category_LV2: Text(If(ThisRecord.Value.Category_LV1=Blank() Or ThisRecord.Value.Category_LV1="카테고리" Or ThisRecord.Value.Category_LV2=Blank() Or ThisRecord.Value.Category_LV2="전체선택", "카테고리 미선택", ThisRecord.Value.Category_LV2)),
                        Date: Date(Year(ThisRecord.Value.Date), Month(ThisRecord.Value.Date), Day(ThisRecord.Value.Date)),
                        IsGood: Text(ThisRecord.Value.LikeT_x002f_F),
                        IsBad: Text(ThisRecord.Value.HateT_x002f_F),
                        Token_Model: Text(ThisRecord.Value.AnswerModel),
                        Bot_Type: Text(ThisRecord.Value.Bot_Type),
                        ID: Int(ThisRecord.Value.ID)
                    }
                )
            );
            
            ClearCollect(
                colCategoryAdmin_New,
                {Category_LV1: DEFAULT_CATEGORY_VALUE, Category_LV2: DEFAULT_CATEGORY_VALUE, LV1Order: 0, CategoryType: "None"},
                Filter(
                    DropColumns(
                        AIGraphUserSatisf,
                        "Bot_Type","ID","Token_Model","IsGood","IsBad"
                    ),
                    Date >= If(
                                DatePickerSetting = false,
                                Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                    "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                    "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                    "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                    "1년", DateAdd(Today(),-12,TimeUnit.Months)
                                ), DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                            ) && 
                    Date <= If(
                                DatePickerSetting = false,
                                DateAdd(Today(),-0,TimeUnit.Months),
                                DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate
                            )
                )
            );
            
            ClearCollect(
                chatBotVersionList,
                AddColumns(
                    Sort(
                        Filter(
                            Distinct(
                                AIGraphUserSatisf,
                                Token_Model
                            ), 
                            Value <> Blank()
                        ),
                        Value,
                        SortOrder.Ascending
                    ),
                    "Index",0
                )
            );
            
            ClearCollect(
                AIGraphAddColYM_All,
                AddColumns(
                    AIGraphUserSatisf,
                    "YearMonth",
                    Year(Date)*100 + Month(Date),
                    "YearMonth_",
                    Text(Year(Date)) & "년 " & Text(Month(Date)) &"월"
                )
            );
            
            If(
                SelectedLV1_AIGraph = "전체",
                Set(AIGraphAddColYM, AIGraphAddColYM_All),
                If(
                    SelectedLV1_AIGraph = "카테고리",
                    Set(AIGraphAddColYM, Filter(AIGraphAddColYM_All, Category_LV1="카테고리 미선택")),
                    Set(AIGraphAddColYM, Filter(AIGraphAddColYM_All, Category_LV1=SelectedLV1_AIGraph))
                )
            );
            
            If(
                AppsBIAxis.Value = "기간",
                Concurrent(
                    ClearCollect(
                        AIGraphUserSatisfMonthlyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or 
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or 
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage_Custom,
                        If(
                            DatePickerSetting = true,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    )
                ),
            
                If(
                    AppsBIAxis.Value = "GPT 버전",
                    ClearCollect(
                        AIGraphGPTvUserSatisf,
                        AddColumns(
                            GroupBy(AIGraphUserSatisf, "Token_Model", "Group"),
                            "Usage_Total",
                            CountRows(Group),
                            "Usage_Good",
                            CountRows(Filter(Group, IsGood="true")),
                            "Usage_Bad",
                            CountRows(Filter(Group, IsBad="true")),
                            "Index",
                            0
                        )
                    ),
            
                    If(
                        AppsBIAxis.Value = "카테고리",
                        ClearCollect(
                            AIGraphCategoryLV1UserSatisf,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Category_LV1", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true")),
                                "Token_UserSatisfRate",
                                Text(Int(CountRows(Filter(Group, IsGood="true")) / CountRows(Group) * 10000) / 100, "#0.0#%"),
                                "Index",
                                0
                            )
                        );
                        ClearCollect(
                            AIGraphCategoryLV2UserSatisf,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Category_LV2", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true")),
                                "Token_UserSatisfRate",
                                Text(Int(CountRows(Filter(Group, IsGood="true")) / CountRows(Group) * 10000) / 100, "#0.0#%"),
                                "Index",
                                0
                            )
                        )
                    )
                )
            );
            
            Concurrent(
                ClearCollect(
                    AIGraphCategoryLV1UserSatisf,
                    SortByColumns(AIGraphCategoryLV1UserSatisf,"Usage_Total",SortOrder.Descending)
                ),
                ClearCollect(
                    AIGraphCategoryLV2UserSatisf,
                    SortByColumns(AIGraphCategoryLV2UserSatisf,"Usage_Total",SortOrder.Descending)
                )
            );
            
            If(
                AppsBIAxis.Value = "GPT 버전",
                
                ForAll(
                    Sequence(CountRows(AIGraphGPTvUserSatisf)),
                    Patch(
                        AIGraphGPTvUserSatisf,
                        Index(AIGraphGPTvUserSatisf, Value),
                        {Index: Value}
                    )
                ),
                If(
                    AppsBIAxis.Value = "카테고리",
                    Concurrent(
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV1UserSatisf)),
                            Patch(
                                AIGraphCategoryLV1UserSatisf,
                                Index(AIGraphCategoryLV1UserSatisf, Value),
                                {Index: Value}
                            )
                        ),
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV2UserSatisf)),
                            Patch(
                                AIGraphCategoryLV2UserSatisf,
                                Index(AIGraphCategoryLV2UserSatisf, Value),
                                {Index: Value}
                            )
                        )
                    )
                )
            );
            
            
            UpdateContext({ 
                locLoadingSpinner: false
            });
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =15
        Text: ="버튼"
        Visible: =false
        X: =915
        Y: =1040
        ZIndex: =6

    Label_For_TEST_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Size: =13
        Text: =CountRows(AIGraphUserSatisf)
        Visible: =false
        X: =1144
        Y: =1040
        ZIndex: =7

    Label_GalleryFilter_Category_AIGraph_UserSatisf As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =32
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="카테고리"
        Width: =80
        X: =BG_Filtering_AIGraph_UserSatisf.X + 38
        Y: =BG_Filtering_AIGraph_UserSatisf.Y + BG_Filtering_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =8

    Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =If(SelectedLV1_AIGraph = "카테고리", "카테고리 미선택", SelectedLV1_AIGraph)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Distinct(
                colCategoryAdmin,
                Category_LV1
            )
        OnChange: |-
            =If(Self.Selected.Value = "카테고리 미선택", Set(SelectedLV1_AIGraph, "카테고리"), Set(SelectedLV1_AIGraph, Self.Selected.Value));
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV1을 선택해주세요"
        Width: =200
        X: |
            =Label_GalleryFilter_Category_AIGraph_UserSatisf.X + Label_GalleryFilter_Category_AIGraph_UserSatisf.Width + 8
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y
        ZIndex: =9

    Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =If(SelectedLV2_AIGraph = "전체선택", "카테고리 미선택", SelectedLV2_AIGraph)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_AxisPicker_AIGraph_UserSatisf.Selected.Value="카테고리", DisplayMode.Disabled, DisplayMode.Edit)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Filter(
                If(
                    SelectedLV1_AIGraph = DEFAULT_CATEGORY_VALUE,
                    // 카테고리 LV1 이 전체로 선택되어 있을경우
                    Distinct(
                        colCategoryAdmin,
                        Category_LV2
                    ),
                    // 카테고리 LV1 이 전체가 아닌 다른걸로 선택되어 있을경우
                    If(
                        SelectedLV1_AIGraph = "카테고리",
                        Distinct(
                            Filter(
                                colCategoryAdmin,
                                Category_LV1 = DEFAULT_CATEGORY_VALUE || Category_LV1 = "카테고리 미선택"
                            ),
                            Category_LV2
                        ),
                        Distinct(
                            Filter(
                                colCategoryAdmin,
                                Category_LV1 = DEFAULT_CATEGORY_VALUE || Category_LV1 = SelectedLV1_AIGraph
                            ),
                            Category_LV2
                        )
                    )
                    
                ),
                Value <> Blank()
            )
        OnChange: |-
            =If(Self.Selected.Value = "카테고리 미선택", Set(SelectedLV2_AIGraph, "전체선택"), Set(SelectedLV2_AIGraph, Self.Selected.Value));
            Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV2을 선택해주세요"
        Width: =200
        X: ='Label_GalleryFilter_>_AIGraph_UserSatisf'.X + 'Label_GalleryFilter_>_AIGraph_UserSatisf'.Width
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y
        ZIndex: =10

    "'Label_GalleryFilter_>_AIGraph_UserSatisf' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =If(Dropdown_AxisPicker_AIGraph_UserSatisf.Selected.Value="카테고리", DisplayMode.Disabled, DisplayMode.Edit)
        Font: =Font.'Segoe UI'
        Text: =">"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.X + Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Width
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y + Label_GalleryFilter_Category_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =11

    Label_DatePicker_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="기간"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.X + Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Width + 24
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =12

    "'Label_DatePicker_~_AIGraph_UserSatisf' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =39
        PaddingLeft: =0
        PaddingRight: =0
        Text: ="~"
        Width: =40
        X: =DatePicker_FirstDate_AIGraph_UserSatisf.X + DatePicker_FirstDate_AIGraph_UserSatisf.Width
        Y: ='Label_GalleryFilter_>_AIGraph_UserSatisf'.Y
        ZIndex: =13

    DatePicker_FirstDate_AIGraph_UserSatisf As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DefaultDate: |-
            =Switch(
                Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value,
                "1개월",
                    DateAdd(Today(),-1,TimeUnit.Months),
                "3개월",
                    DateAdd(Today(),-3,TimeUnit.Months),
                "6개월",
                    DateAdd(Today(),-6,TimeUnit.Months),
                "1년",
                    DateAdd(Today(),-12,TimeUnit.Months),
                "직접선택",
                    DateAdd(Today(),-1,TimeUnit.Months)
            )
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingTop: =5
        Reset: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value<>"직접선택", true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        StartYear: =Year(Today())-1
        Width: |
            =200
        X: =Dropdown_DatePicker_AIGraph_UserSatisf.X + Dropdown_DatePicker_AIGraph_UserSatisf.Width + 10
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =14

    DatePicker_LastDate_AIGraph_UserSatisf As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접선택", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingTop: =5
        Reset: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value<>"직접선택", true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: |
            =200
        X: ='Label_DatePicker_~_AIGraph_UserSatisf'.X + 'Label_DatePicker_~_AIGraph_UserSatisf'.Width
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =15

    Dropdown_DatePicker_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =["1개월", "3개월", "6개월", "1년", "직접선택"]
        OnChange: |-
            =If(
                Self.Selected.Value = "직접선택",
                Set(DatePickerSetting,true),
                Set(DatePickerSetting,false)
            );
            
            Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: =150
        X: =Label_DatePicker_AIGraph_UserSatisf.X + Label_DatePicker_AIGraph_UserSatisf.Width + 8
        Y: =DatePicker_FirstDate_AIGraph_UserSatisf.Y
        ZIndex: =16

    Label_RadioFilter_Category_AIGraph_UserSatisf As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =DatePicker_LastDate_AIGraph_UserSatisf.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="비교방식"
        Width: =80
        X: =DatePicker_LastDate_AIGraph_UserSatisf.X + DatePicker_LastDate_AIGraph_UserSatisf.Width + 24
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =17

    LineChart_Default_Monthly_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                    Filter(
                        AIGraphUserSatisfMonthlyUsage,
                        (
                            YearMonth >= 
                            Switch(
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                    "6개월",
                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                    "1년",
                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                            )
                        ) &&
                        (
                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                        ),YearMonth_ <> Blank()
                    )
                )
            )
        Markers: |-
            =/*If(
                CountRows(
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                            Filter(
                                AIGraphUserSatisfMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),YearMonth_ <> Blank()
                            )
                        )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And LineChart_Default_Daily_AIGraph_UserSatisf.Visible = false And AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_UserSatisf.Width
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =18

    LineChart_Default_Daily_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =675
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    Filter(
                        AIGraphUserSatisfDailyUsage,
                        (
                            Date >= Switch(
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                    "1개월",
                                DateAdd(Today(),-1,TimeUnit.Months),
                                    "3개월",
                                DateAdd(Today(),-3,TimeUnit.Months)
                            )
                        ) && (
                            Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                        )
                    )
                )
            )
        Markers: |-
            =/*If(
                CountRows(
                    If(
                        Dropdown_AxisPicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_AxisPicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                        Filter(
                            AIGraphTokenDailyUsage,
                            (
                                Token_Date >= 
                                Switch(
                                    Dropdown_AxisPicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "1개월",
                                    Int(Text(DateAdd(Today(),-1,TimeUnit.Months), "yyyymm")),
                                        "3개월",
                                    Int(Text(DateAdd(Today(),-3,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                Token_Date <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),Token_Date <> Blank()
                        )
                    )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And AppsBIAxis.Value = "기간",
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    true,
                    false
                ),
                false
            )
        Width: =BG_Graph_AIGraph_UserSatisf.Width - 60
        X: =340
        Y: =340
        ZIndex: =19

    LineChart_Custom_Daily_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = true,
                Filter(
                    AIGraphUserSatisfDailyUsage_Custom,
                    (
                        Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                    ) && (
                        Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                    )
                )
            )
        Markers: |-
            =/*If(
                CountRows(
                    If(
                        Dropdown_AxisPicker_AIGraph_UserSatisf.SelectedText.Value = "직접선택",
                        Filter(
                            AIGraphTokenDailyUsage_Custom,
                            Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate &&
                            Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate,
                            Token_Date <> Blank()
                        )
                    )
                ) = 1,
                true,
                false
            )*/
            true
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = true And AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_UserSatisf.Width
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =20

    Label_Token_Input_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="만족했어요"
        Width: =200
        X: |
            =1520
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y + Label_Token_Total_AIGraph_UserSatisf.Height + 20
        ZIndex: =21

    Label_Token_Output_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="별로에요"
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y + Label_Token_Input_AIGraph_UserSatisf.Height + 20
        ZIndex: =22

    Label_Token_Total_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Text: ="미응답"
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X
        Y: =Sep_Summ_AIGraph_UserSatisf.Y + 20
        ZIndex: =23

    Value_Token_Input_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Text: |
            =Text(
                CountRows(Filter(If(
                SelectedLV1_AIGraph = "전체",
                AIGraphUserSatisf,
                If(
                    SelectedLV1_AIGraph = "카테고리",
                    Filter(AIGraphUserSatisf, Category_LV1="카테고리 미선택"),
                    Filter(AIGraphUserSatisf, Category_LV1=SelectedLV1_AIGraph)
                )
            ), IsGood="true")),
                "###,###,###,##0"
            )
        X: =Label_Token_Input_AIGraph_UserSatisf.X + Label_Token_Input_AIGraph_UserSatisf.Width
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y
        ZIndex: =24

    Value_Token_Output_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Text: |
            =Text(
                CountRows(Filter(If(
                SelectedLV1_AIGraph = "전체",
                AIGraphUserSatisf,
                If(
                    SelectedLV1_AIGraph = "카테고리",
                    Filter(AIGraphUserSatisf, Category_LV1="카테고리 미선택"),
                    Filter(AIGraphUserSatisf, Category_LV1=SelectedLV1_AIGraph)
                )
            ), IsBad="true")),
                "###,###,###,##0"
            )
        X: =Label_Token_Output_AIGraph_UserSatisf.X + Label_Token_Output_AIGraph_UserSatisf.Width
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y
        ZIndex: =25

    Value_Token_Total_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Text: |-
            =Text(
                CountRows(
                    If(
                        SelectedLV1_AIGraph = "전체",
                        AIGraphUserSatisf,
                        If(
                            SelectedLV1_AIGraph = "카테고리",
                            Filter(AIGraphUserSatisf, Category_LV1="카테고리 미선택"),
                            Filter(AIGraphUserSatisf, Category_LV1=SelectedLV1_AIGraph)
                        )
                    )
                ) - 
                CountRows(
                    Filter(
                        If(
                            SelectedLV1_AIGraph = "전체",
                            AIGraphUserSatisf,
                            If(
                                SelectedLV1_AIGraph = "카테고리",
                                Filter(AIGraphUserSatisf, Category_LV1="카테고리 미선택"),
                                Filter(AIGraphUserSatisf, Category_LV1=SelectedLV1_AIGraph)
                            )
                        ), 
                        IsGood="true"
                    )
                ) - 
                CountRows(
                    Filter(
                        If(
                            SelectedLV1_AIGraph = "전체",
                            AIGraphUserSatisf,
                            If(
                                SelectedLV1_AIGraph = "카테고리",
                                Filter(AIGraphUserSatisf, Category_LV1="카테고리 미선택"),
                                Filter(AIGraphUserSatisf, Category_LV1=SelectedLV1_AIGraph)
                            )
                        ), 
                        IsBad="true"
                    )
                ),
                "###,###,###,##0"
            )
        X: =Label_Token_Total_AIGraph_UserSatisf.X + Label_Token_Total_AIGraph_UserSatisf.Width
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y
        ZIndex: =26

    Color_Token_Input_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,1).Value
        FocusedBorderThickness: =4
        Height: =5
        Width: =30
        X: =Label_Token_Input_AIGraph_UserSatisf.X - Self.Width
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y+Label_Token_Input_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =27

    Color_Token_Output_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,2).Value
        FocusedBorderThickness: =4
        Height: =5
        Width: =30
        X: =Color_Token_Input_AIGraph_UserSatisf.X
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y + Label_Token_Output_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =28

    Color_Token_Total_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =Index(AIGraph_ColorLists,3).Value
        FocusedBorderThickness: =4
        Height: =5
        Width: =30
        X: =Color_Token_Input_AIGraph_UserSatisf.X
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y + Label_Token_Total_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =29

    PieChart_GPTv_Usage_AIGraph_UserSatisf As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: |
            =450
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: =[Value_Token_Input_AIGraph_UserSatisf.Text,Value_Token_Output_AIGraph_UserSatisf.Text,Value_Token_Total_AIGraph_UserSatisf.Text]
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        ShowLabels: =false
        Size: =15
        Width: |-
            =450
                
        X: =1450
        Y: =Sep_AIGraph_UserSatisf.Y - 30
        ZIndex: =30

    Label_PieChart_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: =28
        Size: =20
        Text: =First(똑실이_ChatbotText_table).BotName & " 답변 만족 비율"
        Width: =400
        X: =1480
        Y: =Label_GraphTitle_AIGraph_UserSatisf.Y
        ZIndex: =31

    "BarChart_LV1Category_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        Items: |-
            =SortByColumns(
                AIGraphCategoryLV1UserSatisf,
                "Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: |
            =80
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And SelectedLV1_AIGraph = "전체",
                true,
                false
            )
        Width: =BG_Graph_AIGraph_TokenUsage.Width - 100
        X: |
            =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =41

        Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =If(
                    ThisItem.Category_LV1 = Blank(),
                    "전체",
                    ThisItem.Category_LV1
                )
            Width: =135
            Y: =5
            ZIndex: =1

        Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,2).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError(
                    If(
                        Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 = ThisItem.Category_LV1
                            ),
                            Category_LV1 = ThisItem.Category_LV1,
                            Usage_Bad
                        ),
                        ((Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (((Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        ) - ( LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 = ThisItem.Category_LV1
                            ),
                            Category_LV1 = ThisItem.Category_LV1,
                            Usage_Bad
                        ) ))) / Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ),
                    0,
                    If(
                        Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 = ThisItem.Category_LV1
                            ),
                            Category_LV1 = ThisItem.Category_LV1,
                            Usage_Bad
                        ),
                        ((Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (((Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        ) - ( LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 = ThisItem.Category_LV1
                            ),
                            Category_LV1 = ThisItem.Category_LV1,
                            Usage_Bad
                        ) ))) / Max(
                            AIGraphCategoryLV1UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    )
                )
            X: =Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2 + Self.Height
            ZIndex: =2

        Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,1).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError(If(
                    Max(
                        AIGraphCategoryLV1UserSatisf,
                        Usage_Total
                    ) <> LookUp(
                        Filter(
                            AIGraphCategoryLV1UserSatisf,
                            Category_LV1=ThisItem.Category_LV1
                        ),
                        Category_LV1=ThisItem.Category_LV1,
                        Usage_Good
                    ),
                    (
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            ((
                                Max(
                                    AIGraphCategoryLV1UserSatisf,
                                    Usage_Total
                                ) -
                                (
                                    LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Good
                                    )
                                )
                            )) / 
                            Max(
                                AIGraphCategoryLV1UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total,
                    (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                ),0,If(
                    Max(
                        AIGraphCategoryLV1UserSatisf,
                        Usage_Total
                    ) <> LookUp(
                        Filter(
                            AIGraphCategoryLV1UserSatisf,
                            Category_LV1=ThisItem.Category_LV1
                        ),
                        Category_LV1=ThisItem.Category_LV1,
                        Usage_Good
                    ),
                    (
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            ((
                                Max(
                                    AIGraphCategoryLV1UserSatisf,
                                    Usage_Total
                                ) -
                                (
                                    LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Good
                                    )
                                )
                            )) / 
                            Max(
                                AIGraphCategoryLV1UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total,
                    (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                ))
            X: =Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,3).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError((
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            ((
                                Max(
                                    AIGraphCategoryLV1UserSatisf,
                                    Usage_Total
                                ) -
                                (
                                    LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Total
                                    ) - LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Good
                                    ) - LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Bad
                                    )
                                )
                            )) / 
                            Max(
                                AIGraphCategoryLV1UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total,0,(
                        (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            ((
                                Max(
                                    AIGraphCategoryLV1UserSatisf,
                                    Usage_Total
                                ) -
                                (
                                    LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Total
                                    ) - LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Good
                                    ) - LookUp(
                                        Filter(
                                            AIGraphCategoryLV1UserSatisf,
                                            Category_LV1=ThisItem.Category_LV1
                                        ),
                                        Category_LV1=ThisItem.Category_LV1,
                                        Usage_Bad
                                    )
                                )
                            )) / 
                            Max(
                                AIGraphCategoryLV1UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total)
            X: =Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2 - Self.Height
            ZIndex: =4

        Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf_Bad As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Bad, "###,###,###,##0")="0","",Text(ThisItem.Usage_Bad, "###,###,###,##0"))
            Width: =135
            X: |-
                =IfError(If(
                    Int((ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Width - Self.Width - 5,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Width + 5
                ),0,If(
                    Int((ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Width - Self.Width - 5,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Width + 5
                ))
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Y
            ZIndex: =5

        Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf_Good As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Good, "###,###,###,##0")="0","",Text(ThisItem.Usage_Good, "###,###,###,##0"))
            Width: =135
            X: |-
                =IfError(If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Width - Self.Width - 5,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Width + 5
                ),0,If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Width - Self.Width - 5,
                    Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Width + 5
                ))
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Y
            ZIndex: =6

        Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad, "###,###,###,##0")="0","",Text(ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad, "###,###,###,##0"))
            Width: =135
            X: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X + Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width + 5
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Y
            ZIndex: =7

        RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf_Bad As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(Int(ThisItem.Usage_Bad / ThisItem.Usage_Total*10000)/100, "#0.0#%"),"",Text(Int(ThisItem.Usage_Bad / ThisItem.Usage_Total*10000)/100, "#0.0#%"))
            Width: =RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width
            X: =RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfBad.Y
            ZIndex: =8

        RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf_Good As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: =ThisItem.Token_UserSatisfRate
            Width: =RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width
            X: =RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisfGood.Y
            ZIndex: =9

        RateValue_BarChart_LV1Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(Int((ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100, "#0.0#%"),"",Text(Int((ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100, "#0.0#%"))
            Width: =55
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Y
            ZIndex: =10

    "BarChart_LV2Category_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Height
        Items: |-
            =SortByColumns(
                AIGraphCategoryLV2UserSatisf,
                "Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =
        TemplatePadding: =0
        TemplateSize: =80
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And SelectedLV1_AIGraph <> "전체",
                true,
                false
            )
        Width: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width
        X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.X
        Y: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Y
        ZIndex: =42

        Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Category_LV2
            Width: =135
            Y: =5
            ZIndex: =1

        Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,2).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError(
                    If(
                        Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Bad
                        ),
                        ((Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - ((Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) - LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Bad
                        )) / Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ),
                    0,
                    If(
                        Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Bad
                        ),
                        ((Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - ((Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) - LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Bad
                        )) / Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    )
                )
            X: =Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2 + Self.Height
            ZIndex: =2

        Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,1).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError(
                    If(
                        Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Good
                        ),
                        ((Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - ((Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) - LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Good
                        )) / Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ),
                    0,
                    If(
                        Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) <> LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Good
                        ),
                        ((Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - ((Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        ) - LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 = ThisItem.Category_LV2
                            ),
                            Category_LV2 = ThisItem.Category_LV2,
                            Usage_Good
                        )) / Max(
                            AIGraphCategoryLV2UserSatisf,
                            Usage_Total
                        )) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good) / ThisItem.Usage_Total,
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    )
                )
            X: =Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,3).Value
            FocusedBorderThickness: =4
            Height: =20
            Width: |-
                =IfError((
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            (
                                Max(
                                    AIGraphCategoryLV2UserSatisf,
                                    Usage_Total
                                ) -
                                (LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Total
                                ) - LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Good
                                ) - LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Bad
                                ))
                            ) / 
                            Max(
                                AIGraphCategoryLV2UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total,0,(
                        (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135) - (
                            (
                                Max(
                                    AIGraphCategoryLV2UserSatisf,
                                    Usage_Total
                                ) -
                                (LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Total
                                ) - LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Good
                                ) - LookUp(
                                    Filter(
                                        AIGraphCategoryLV2UserSatisf,
                                        Category_LV2=ThisItem.Category_LV2
                                    ),
                                    Category_LV2=ThisItem.Category_LV2,
                                    Usage_Bad
                                ))
                            ) / 
                            Max(
                                AIGraphCategoryLV2UserSatisf,
                                Usage_Total
                            )
                        ) * (Parent.Width - Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width - 135)
                    ) * (ThisItem.Usage_Total - ThisItem.Usage_Bad - ThisItem.Usage_Good)/ThisItem.Usage_Total)
            X: =Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2 - Self.Height
            ZIndex: =4

        RateValue_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(Int((ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100, "#0.0#%"),"",Text(Int((ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100, "#0.0#%"))
            Width: =55
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Y
            ZIndex: =5

        RateValue_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100, "#0.0#%"),"",Text(Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100, "#0.0#%"))
            Width: =55
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Y
            ZIndex: =6

        RateValue_BarChart_LV2Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: |
                =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(Int((ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100, "#0.0#%"),"",Text(Int((ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad)/ThisItem.Usage_Total*10000)/100, "#0.0#%"))
            Width: =55
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Y
            ZIndex: =7

        Value_BarChart_LV2Category_Daily_AIGraph_UserSatisfRate_Bad As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Bad, "###,###,###,##0")="0","",Text(ThisItem.Usage_Bad, "###,###,###,##0"))
            Width: =135
            X: |-
                =//Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Width + 5
                IfError(If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Width - Self.Width - 5,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Width + 5
                ),0,If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Width - Self.Width - 5,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Width + 5
                ))
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Bad.Y
            ZIndex: =8

        Value_BarChart_LV2Category_Daily_AIGraph_UserSatisfRate_Good As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Good, "###,###,###,##0")="0","",Text(ThisItem.Usage_Good, "###,###,###,##0"))
            Width: =135
            X: |-
                =//Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Width + 5
                IfError(If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Width - Self.Width - 5,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Width + 5
                ),0,If(
                    Int((ThisItem.Usage_Good)/ThisItem.Usage_Total*10000)/100 > 50 And Int(Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Text) > 90,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Width - Self.Width - 5,
                    Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Width + 5
                ))
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf_Good.Y
            ZIndex: =9

        Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: =20
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(Text(ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad, "###,###,###,##0")="0","",Text(ThisItem.Usage_Total - ThisItem.Usage_Good - ThisItem.Usage_Bad, "###,###,###,##0"))
            Width: =135
            X: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf.X + Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width + 5
            Y: =Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Y
            ZIndex: =10

    "BarChart_GPTv_Default_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =500
        Items: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                If(
                    !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                    Filter(Distinct(AIGraphGPTvUserSatisf, Token_Model),Value<>Blank())
                ),
                Blank()
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =150
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =BG_Graph_AIGraph_TokenUsage.Width - 100
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height
        ZIndex: =43

        DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =16
            Text: |-
                =Upper(
                    If(
                        IsBlank(Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")),
                        "gpt3.5",
                        Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")
                    )
                )
            Width: =135
            Y: =5
            ZIndex: =1

        Bar_BarChart_GPTv_Usage_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,3).Value
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1 / CountRows(AIGraphGPTvUserSatisf)),
                    ((Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135) - ((Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    ) - (LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model = ThisItem.Value,
                        Usage_Total
                    ) - LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model = ThisItem.Value,
                        Usage_Good
                    ) - LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model = ThisItem.Value,
                        Usage_Bad
                    ))) / Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135)),
                    0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height*1.5
            ZIndex: =2

        Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,1).Value
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                    (
                        (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135) - (
                            (
                                Sum(AIGraphGPTvUserSatisf,Usage_Total) - 
                                LookUp(
                                    AIGraphGPTvUserSatisf,
                                    Token_Model=ThisItem.Value,
                                    Usage_Good
                                )
                            ) / Sum(AIGraphGPTvUserSatisf,Usage_Total)
                        ) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135)
                    ), 0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =Index(AIGraph_ColorLists,2).Value
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                    (
                        (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135) - (
                            (
                                Sum(AIGraphGPTvUserSatisf,Usage_Total) - 
                                LookUp(
                                    AIGraphGPTvUserSatisf,
                                    Token_Model=ThisItem.Value,
                                    Usage_Bad
                                )
                            ) / Sum(AIGraphGPTvUserSatisf,Usage_Total)
                        ) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 135)
                    ), 0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 + Self.Height*0.5
            ZIndex: =4

        RateValue_BarChart_GPTv_Usage_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =IfError(Text(
                        Int(
                            (LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )-LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            )-LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            ))/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ),"",Text(
                        Int(
                            (LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )-LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            )-LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            ))/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ))
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =55
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_Usage_AIGraph_UserSatisf.Y
            ZIndex: =5

        RateValue_BarChart_GPTv_UsageGood_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =
                
                IfError(Text(
                        Int(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            )/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ),"",Text(
                        Int(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            )/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ))
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =55
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf.Y
            ZIndex: =6

        RateValue_BarChart_GPTv_UsageBad_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                =
                
                IfError(Text(
                        Int(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            )/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ),"",Text(
                        Int(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            )/LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Total
                            )*10000)/100, 
                        "##0.0#%"
                    ))
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =55
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf.Y
            ZIndex: =7

        Value_BarChart_GPTv_Usage_AIGraph_UserSatisf As label:
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =Text(
                    LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model=ThisItem.Value,
                        Usage_Total
                    ) - LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model=ThisItem.Value,
                        Usage_Good
                    ) - LookUp(
                        AIGraphGPTvUserSatisf,
                        Token_Model=ThisItem.Value,
                        Usage_Bad
                    ), 
                    "###,###,###,###"
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =Bar_BarChart_GPTv_Usage_AIGraph_UserSatisf.X + Bar_BarChart_GPTv_Usage_AIGraph_UserSatisf.Width + 5
            Y: =Bar_BarChart_GPTv_Usage_AIGraph_UserSatisf.Y
            ZIndex: =8

        Value_BarChart_GPTv_UsageGood_AIGraph_UserSatisf As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(
                    IsBlank(
                        Text(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            ), 
                            "###,###,###,###"
                        )
                    ),
                    "",
                    Text(
                        LookUp(
                            AIGraphGPTvUserSatisf,
                            Token_Model=ThisItem.Value,
                            Usage_Good
                        ), 
                        "###,###,###,###"
                    )
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf.X + Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf.Width + 5
            Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf.Y
            ZIndex: =9

        Value_BarChart_GPTv_UsageBad_AIGraph_UserSatisf As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: |-
                =If(
                    IsBlank(
                        Text(
                            LookUp(
                                AIGraphGPTvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            ), 
                            "###,###,###,###"
                        )
                    ),
                    "",
                    Text(
                        LookUp(
                            AIGraphGPTvUserSatisf,
                            Token_Model=ThisItem.Value,
                            Usage_Bad
                        ), 
                        "###,###,###,###"
                    )
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGPTvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGPTvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf.X + Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf.Width + 5
            Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf.Y
            ZIndex: =10

    DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: |
            =150
        PaddingLeft: =0
        PaddingRight: |
            =0
        Size: =16
        Text: ="총 사용 비교"
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =330
        ZIndex: =44

    Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =Index(AIGraph_ColorLists,3).Value
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =IfError(
                If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1 / CountRows(AIGraphGPTvUserSatisf)),
                    ((BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - ((Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    ) - (Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )-Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Good
                    )-Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Bad
                    ))) / Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)),
                    0
                ),
                0,
                If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1 / CountRows(AIGraphGPTvUserSatisf)),
                    ((BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - ((Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    ) - (Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )-Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Good
                    )-Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Bad
                    ))) / Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)),
                    0
                )
            )
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 - Self.Height*1.5
        ZIndex: =45

    Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =Index(AIGraph_ColorLists,1).Value
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =IfError(
                If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1 / CountRows(AIGraphGPTvUserSatisf)),
                    ((BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - ((Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    ) - Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Good
                    )) / Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)),
                    0
                ),
                0,
                If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1 / CountRows(AIGraphGPTvUserSatisf)),
                    ((BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - ((Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    ) - Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Good
                    )) / Sum(
                        AIGraphGPTvUserSatisf,
                        Usage_Total
                    )) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)),
                    0
                )
            )
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =46

    Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =Index(AIGraph_ColorLists,2).Value
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                (
                    (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - (
                        (
                            Sum(AIGraphGPTvUserSatisf, Usage_Total)-Sum(AIGraphGPTvUserSatisf, Usage_Bad)
                        )/Sum(AIGraphGPTvUserSatisf, Usage_Total)
                    ) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)
                ), 0
            ),0,If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                (
                    (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135) - (
                        (
                            Sum(AIGraphGPTvUserSatisf, Usage_Total)-Sum(AIGraphGPTvUserSatisf, Usage_Bad)
                        )/Sum(AIGraphGPTvUserSatisf, Usage_Total)
                    ) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 135)
                ), 0
            ))
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 + Self.Height*0.5
        ZIndex: =47

    RateValue_BarChart_GPTv_UsageTotal_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Size: =11
        Text: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        (CountRows(AIGraphUserSatisf)-
                        CountRows(Filter(AIGraphUserSatisf,IsGood="true"))-
                        CountRows(Filter(AIGraphUserSatisf,IsBad="true")))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ),"",If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        (CountRows(AIGraphUserSatisf)-
                        CountRows(Filter(AIGraphUserSatisf,IsGood="true"))-
                        CountRows(Filter(AIGraphUserSatisf,IsBad="true")))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =55
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Y
        ZIndex: =48

    RateValue_BarChart_GPTv_UsageGood_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Size: =11
        Text: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        CountRows(Filter(AIGraphUserSatisf,IsGood="true"))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ),Blank(),If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        CountRows(Filter(AIGraphUserSatisf,IsGood="true"))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =55
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Y
        ZIndex: =49

    RateValue_BarChart_GPTv_UsageBad_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Size: =11
        Text: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        CountRows(Filter(AIGraphUserSatisf,IsBad="true"))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ),"",If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(
                    Int(
                        CountRows(Filter(AIGraphUserSatisf,IsBad="true"))/CountRows(AIGraphUserSatisf)*10000)/100, 
                    "##0.0#%"
                ),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =55
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0.Y
        ZIndex: =50

    Dropdown_AxisPicker_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =First(AxisPickingList).Value
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_TokenUsage.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =AxisPickingList
        OnChange: |-
            =Set(AppsBIAxis, Self.Selected);
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE);
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Reset(Dropdown_DatePicker_AIGraph_UserSatisf);
            Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Reset: =If(Self.Visible=true, true, false)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: =DatePicker_FirstDate_AIGraph_TokenUsage.Width
        X: =Label_RadioFilter_Category_AIGraph_TokenUsage.X + Label_RadioFilter_Category_AIGraph_TokenUsage.Width + 8
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage.Y
        ZIndex: =51

    Sep_PieChart_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Label_PieChart_AIGraph_UserSatisf.X
        Y: =Label_GraphTitle_AIGraph_UserSatisf.Y + Label_GraphTitle_AIGraph_UserSatisf.Height + 16
        ZIndex: =52

    Label_GraphTitle_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =28
        Size: =20
        Text: |-
            =Switch(
                Dropdown_AxisPicker_AIGraph_UserSatisf.Selected.Value, 
                "기간", "기간 별 만족 추이",
                "GPT 버전", "GPT 버전 별 만족 비교",
                "카테고리", "카테고리 별 만족 비교"
            )
        Width: =600
        X: =Label_GalleryFilter_Category_AIGraph_UserSatisf.X
        Y: =240
        ZIndex: =53

    Sep_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =1073
        X: =Label_GraphTitle_AIGraph_UserSatisf.X
        Y: =Label_GraphTitle_AIGraph_UserSatisf.Y + Label_GraphTitle_AIGraph_UserSatisf.Height + 16
        ZIndex: =54

    "'[Hidden]Group_Value_GPTv_Total_AIGraph_UserSatisf' As group":
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =54

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_2' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,1).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,1).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =32

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_3' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,2).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,2).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =33

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_4' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,3).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,3).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =34

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_5' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,4).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,4).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =35

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_6' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,5).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,5).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =36

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_7' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,6).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,6).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =37

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_8' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,7).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,7).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =38

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_9' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,8).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,8).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =39

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_10' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,9).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,9).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =40

    Sep_Summ_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Sep_PieChart_AIGraph_UserSatisf.X
        Y: =670
        ZIndex: =55

    AlertMSG_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Bold
        Height: =28
        Size: =10
        Text: =" *저장된 데이터에 기반한 차트로, 실제 사용량과는 차이가 있을 수 있습니다."
        Width: |
            =800
        X: =1086
        Y: =78
        ZIndex: =56

    Value_BarChart_GPTv_UsageTotal_Daily_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Size: =10
        Text: |-
            =
            
            IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text((CountRows(AIGraphUserSatisf)-CountRows(Filter(AIGraphUserSatisf,IsGood="true"))-CountRows(Filter(AIGraphUserSatisf,IsBad="true"))), "#,###,###,##0"),
                0
            ),"",If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text((CountRows(AIGraphUserSatisf)-CountRows(Filter(AIGraphUserSatisf,IsGood="true"))-CountRows(Filter(AIGraphUserSatisf,IsBad="true"))), "#,###,###,##0"),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.X + Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Width + 5
        Y: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Y
        ZIndex: =58

    Value_BarChart_GPTv_UsageGood_Daily_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingTop: =0
        Size: =10
        Text: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(Sum(AIGraphGPTvUserSatisf,Usage_Good), "#,###,###,##0"),
                0
            ),"",If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(Sum(AIGraphGPTvUserSatisf,Usage_Good), "#,###,###,###"),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.X + Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Width + 5
        Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Y
        ZIndex: =59

    Value_BarChart_GPTv_UsageBad_Daily_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Size: =10
        Text: |-
            =IfError(If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(Sum(AIGraphGPTvUserSatisf,Usage_Bad), "#,###,###,##0"),
                0
            ),"",If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                Text(Sum(AIGraphGPTvUserSatisf,Usage_Bad), "#,###,###,###"),
                0
            ))
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: |-
            =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0.X + Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0.Width + 5
            
            /*
            
            */
        Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0.Y
        ZIndex: =60

    Label_Alert_NoData_AIGraph_UserSatisf_1 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =735
        Size: =15
        Text: |-
            =If(
                locLoadingSpinner=true,
                "데이터를 분석하고 있습니다.",
                If(
                    Switch(
                        AppsBIAxis.Value,
                        "기간",
                            (
                                CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphUserSatisfDailyUsage,
                                                (
                                                    Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphUserSatisfMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphUserSatisfDailyUsage_Custom,
                                            (
                                                Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                            ) && (
                                                Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                                            )
                                        )
                                    )) = 1 && Max(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphUserSatisfDailyUsage,
                                                (
                                                    Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphUserSatisfMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphUserSatisfDailyUsage_Custom,
                                            (
                                                Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                            ) && (
                                                Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                                            )
                                        )
                                    ),
                                    Usage_Total) = 0
                                ) Or (IsError(
                                    CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphUserSatisfDailyUsage,
                                                (
                                                    Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphUserSatisfMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphUserSatisfDailyUsage_Custom,
                                            (
                                                Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                            ) && (
                                                Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                                            )
                                        )
                                    )
                                ))
                            ) Or (IsBlank(
                                    CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphUserSatisfDailyUsage,
                                                (
                                                    Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphUserSatisfMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphUserSatisfDailyUsage_Custom,
                                            (
                                                Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                            ) && (
                                                Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                                            )
                                        )
                                    )
                                ))
                            ) Or (CountRows(
                                    If(
                                        DatePickerSetting = false,
                                        If(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                                            Filter(
                                                AIGraphUserSatisfDailyUsage,
                                                (
                                                    Date >= Switch(
                                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                            "1개월",
                                                        DateAdd(Today(),-1,TimeUnit.Months),
                                                            "3개월",
                                                        DateAdd(Today(),-3,TimeUnit.Months)
                                                    )
                                                ) && (
                                                    Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                                )
                                            ),
                                            If(
                                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월",
                                                Filter(
                                                    AIGraphUserSatisfMonthlyUsage,
                                                    (
                                                        YearMonth >= 
                                                        Switch(
                                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                                "6개월",
                                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                                "1년",
                                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                                        )
                                                    ) &&
                                                    (
                                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                                    ),YearMonth_ <> Blank()
                                                )
                                            )
                                        ),
                                        Filter(
                                            AIGraphUserSatisfDailyUsage_Custom,
                                            (
                                                Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                            ) && (
                                                Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                                            )
                                        )
                                    )
                                )=0
                            ),
                        "GPT 버전",
                            (
                                CountRows(
                                    If(
                                        !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                                        Filter(Distinct(AIGraphGPTvUserSatisf, Token_Model),Value<>Blank())
                                    )
                                ) = 1 && Max(
                                    If(
                                        !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                                        AIGraphGPTvUserSatisf
                                    ),Usage_Total
                                ) = 0
                            ) Or (IsError(
                                CountRows(
                                    If(
                                        !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                                        Filter(Distinct(AIGraphGPTvUserSatisf, Token_Model),Value<>Blank())
                                    )
                                ))
                            ) Or (IsBlank(
                                CountRows(
                                    If(
                                        !IsError(1/CountRows(AIGraphGPTvUserSatisf)),
                                        Filter(Distinct(AIGraphGPTvUserSatisf, Token_Model),Value<>Blank())
                                    )
                                ))
                            ),
                        "카테고리",
                            (
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value="전체",
                                        AIGraphCategoryLV1UserSatisf,
                                        AIGraphCategoryLV2UserSatisf
                                    )
                                ) = 1 && Max(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value="전체",
                                        AIGraphCategoryLV1UserSatisf,
                                        AIGraphCategoryLV2UserSatisf
                                    ),Usage_Total
                                ) = 0
                            ) Or (IsError(
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value="전체",
                                        AIGraphCategoryLV1UserSatisf,
                                        AIGraphCategoryLV2UserSatisf
                                    )
                                )
                            )) Or (IsBlank(
                                CountRows(
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value="전체",
                                        AIGraphCategoryLV1UserSatisf,
                                        AIGraphCategoryLV2UserSatisf
                                    )
                                )
                            )) Or (CountRows(
                                (
                                    If(
                                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value="전체",
                                        AIGraphCategoryLV1UserSatisf,
                                        AIGraphCategoryLV2UserSatisf
                                    )
                                )
                            )=0)
                    ),
                    "데이터가 없습니다."
                )
            )
        Visible: |-
            =If(
                Self.Text = "데이터가 없습니다." Or Self.Text = "데이터를 분석하고 있습니다.",
                true,
                false
            )
        Width: =1081
        X: =340
        Y: =305
        ZIndex: =61

    Label_Alert_NoData_AIGraph_UserSatisf_2 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =Label_Alert_NoData_AIGraph_UserSatisf_1.Height
        Size: =15
        Text: =Label_Alert_NoData_AIGraph_UserSatisf_1.Text
        Visible: |-
            =If(
                Self.Text = "데이터가 없습니다." Or Self.Text = "데이터를 분석하고 있습니다.",
                true,
                false
            )
        Width: =415
        X: =1465
        Y: =Label_Alert_NoData_AIGraph_UserSatisf_1.Y
        ZIndex: =62

    LoadingSpinner_AIGraph_UserSatisf As image:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderThickness: =4
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverFill: =RGBA(0, 0, 0, 0)
        Image: ='6-dots-rotate'
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedFill: =RGBA(0, 0, 0, 0)
        Visible: =locLoadingSpinner
        X: =977
        Y: =474
        ZIndex: =63

