AIGraph_UserSatisf As screen:
    Fill: =ColorValue(CSS_COMMON.colors.bg2)
    LoadingSpinner: =LoadingSpinner.Data
    LoadingSpinnerColor: =RGBA(105, 121, 126, 1)
    OnHidden: |-
        =Concurrent(
            Set(gblStartPage,"AIGraph_UserSatisf"),
            Clear(AIGraphToken)
        )
    OnVisible: |
        =//============================== << 화면 최초 접속 시 >> ==============================
        // 1. 로딩 이미지 활성화
        Concurrent(
            UpdateContext({locLoadingSpinner:true}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:true})
        ); // 로딩 스피너 배경 이미지 비활성 );
            
        // 2. 초기화
        Concurrent(
            Refresh(똑실이_Token_table),       // DB REFRESH
            UpdateContext({locPopupBackground:false}),  // 팝업 배경 이미지 비활성화
        
            Set(DatePickerSetting, false),
            Set(AxisPickingList, ["기간", "GPT 버전", "카테고리"]); // 
            
            ClearCollect(
                colCategoryAdmin,
                {Category_LV1: DEFAULT_CATEGORY_VALUE, Category_LV2: DEFAULT_CATEGORY_VALUE, LV1Order: 0, CategoryType: "None"},
                ForAll(
                    Table(ParseJSON('똑실이-[Apps]Lv1권한할당카테고리목록'.Run(User().Email).assigned_categories)),
                    {
                        Category_LV1: Text(ThisRecord.Value.Category_LV1),
                        Category_LV2: Text(ThisRecord.Value.Category_LV2),
                        Category_LV1LV2: Text(ThisRecord.Value.Category_LV1) & "/" & Text(ThisRecord.Value.Category_LV2)
                    }
                )
            );
        );
        
        //============================== << 필터 초기화 및 로딩이미지 비활성화 >> ==============================
        Set(AppsBIAxis, Radio_ChartView_AIGraph_UserSatisf.Selected);
        Concurrent(
            Set(AIGraph_Col1, ColorValue(CSS_COMMON.colors.red1)),
            Set(AIGraph_Col2, ColorValue(CSS_COMMON.colors.orange1)),
            Set(AIGraph_Col3, ColorValue(CSS_COMMON.colors.yellow1)),
            Set(AIGraph_Col4, ColorValue(CSS_COMMON.colors.green1)),
            Set(AIGraph_Col5, ColorValue(CSS_COMMON.colors.mustard1)),
            Set(AIGraph_Col6, ColorValue(CSS_COMMON.colors.red2)),
            Set(AIGraph_Col7, ColorValue(CSS_COMMON.colors.orange2)),
            Set(AIGraph_Col8, ColorValue(CSS_COMMON.colors.yellow2)),
            Set(AIGraph_Col9, ColorValue(CSS_COMMON.colors.green2)),
        
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE),
            Set(AIGraphAxis, First(AxisPickingList)),
        
            Reset(Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf),
            Reset(Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf),
            Reset(Dropdown_DatePicker_AIGraph_UserSatisf),
            Reset(DatePicker_FirstDate_AIGraph_UserSatisf),
            Reset(DatePicker_LastDate_AIGraph_UserSatisf),
            Reset(Radio_ChartView_AIGraph_UserSatisf),
            Select(Button_Table_Filtering_AIGraph_UserSatisf)
        );
        
        Select(Button_Table_Filtering_AIGraph_UserSatisf);
        
        Concurrent(
            Set(AIGraphColorLists, [
                AIGraph_Col1,AIGraph_Col2,AIGraph_Col3,AIGraph_Col4,AIGraph_Col5,AIGraph_Col6,AIGraph_Col7,AIGraph_Col8,AIGraph_Col9,
                AIGraph_Col1,AIGraph_Col2,AIGraph_Col3,AIGraph_Col4,AIGraph_Col5,AIGraph_Col6,AIGraph_Col7,AIGraph_Col8,AIGraph_Col9
            ]),
        
            UpdateContext({locLoadingSpinner:false}), // 로딩 스피너 이미지 비활성
            UpdateContext({locLoadingSpinnerBackground:false}) // 로딩 스피너 배경 이미지 비활성
        );

    Component_GNB_AIGraph_UserSatisf As New_Component_GNB:

    Label_AIGraphMain_AIGraph_UserSatisf As Component_Main_Title:
        ScreenTitle: =First(똑실이_ChatbotText_table).BotName & " 사용 분석"
        X: =330
        ZIndex: =2

    BG_Summ_AIGraph_UserSatisf As Component_Container:
        Height: =870
        Width: =465
        X: =BG_Graph_AIGraph_UserSatisf.X + BG_Graph_AIGraph_UserSatisf.Width - 20
        Y: =198
        ZIndex: =3

    BG_Filtering_AIGraph_UserSatisf As Component_Container:
        Height: =120
        Width: =1556 + 40
        X: =Label_AIGraphMain_AIGraph_UserSatisf.X - 20
        Y: =Label_AIGraphMain_AIGraph_UserSatisf.Y + Label_AIGraphMain_AIGraph_UserSatisf.Height -5
        ZIndex: =4

    BG_Graph_AIGraph_UserSatisf As Component_Container:
        Height: =870
        Width: =1151
        X: =Label_AIGraphMain_AIGraph_UserSatisf.X - 20
        Y: =198
        ZIndex: =5

    "'[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf' As gallery.galleryHorizontal":
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderStyle: =BorderStyle.None
        DelayItemLoading: =true
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        Items: |-
            =/*
            If(
                AppsBIAxis.Value = "GPT 버전" And (Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월"),
                If(
                    !IsError(1/CountRows(AIGraphGPTvDailyUserSatisf)),
                    AIGraphGPTvUserSatisfDailyXAxis
                ),
                Blank()
            )
            */
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: |-
            =/*
            If(
                !IsError(
                    If(
                        AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyUserSatisf)),
                        If(
                            CountRows(
                                If(
                                    AppsBIAxis.Value = "GPT 버전" And Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월",
                                    AIGraphGPTvUserSatisfDailyXAxis
                                )
                            ) > 23,
                            50,
                            Self.Width / CountRows(
                                If(
                                    AppsBIAxis.Value = "GPT 버전" And Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월",
                                    AIGraphGPTvUserSatisfDailyXAxis
                                )
                            )
                        )
                    )
                ),
                If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyUserSatisf)),
                    If(
                        CountRows(
                            If(
                                AppsBIAxis.Value = "GPT 버전" And Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월",
                                AIGraphGPTvUserSatisfDailyXAxis
                            )
                        ) > 23,
                        50,
                        Self.Width / CountRows(
                            If(
                                AppsBIAxis.Value = "GPT 버전" And Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월",
                                AIGraphGPTvUserSatisfDailyXAxis
                            )
                        )
                    )
                ), 
                0
            )
            */
        Visible: =false
        Width: =1100
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =6

        "'[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2' As label":
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =165
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13
            Text: =/*ThisItem.Date*/
            Width: =30
            X: =(Parent.TemplateWidth - Self.Width)/2
            Y: =Parent.Height-Self.Height
            ZIndex: =1

        "'[Delete]Bar_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_10' As rectangle":
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderThickness: =4
            Height: |-
                =/*If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGPTvDailyUserSatisf)),
                    If(
                        Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월",
                        (Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height) - (
                            (
                                Max(AIGraphGPTvUserSatisfDailyXAxis,Usage_Total) - 
                                LookUp(
                                    AIGraphGPTvUserSatisfDailyXAxis,
                                    Date=ThisItem.Date,
                                    Usage_Total
                                )
                            ) / Max(AIGraphGPTvDailyUserSatisf,Usage_Total)
                        ) * (Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height)
                    ), 0
                )*/
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth - Self.X*2
            X: |-
                =If(
                    !IsError(Parent.TemplateWidth/10/CountRows(chatBotVersionList)),
                    Parent.TemplateWidth/10/CountRows(chatBotVersionList),
                    0
                )
            Y: =Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height - Self.Height
            ZIndex: =2

        "'[Delete]Bar_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_11' As rectangle":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =AIGraph_Col1
            FocusedBorderThickness: =4
            Height: |-
                =/*If(
                    !IsError(1/CountRows(AIGraphGPTvDailyUserSatisf)) And !IsError(Index(chatBotVersionList,1).Value),
                    (Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height) - (
                        (
                            Max(AIGraphGPTvUserSatisfDailyXAxis,Usage_Total) - 
                            LookUp(
                                Filter(
                                    AIGraphGPTvDailyUserSatisf,
                                    Token_Model=If(
                                        !IsError(Index(chatBotVersionList,1).Value),
                                        Index(chatBotVersionList,1).Value
                                    )
                                ),
                                Date=ThisItem.Date,
                                Usage_Total
                            )
                        ) / Max(AIGraphGPTvDailyUserSatisf,Usage_Total)
                    ) * (Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height),
                    0
                )*/
            OnSelect: =Select(Parent)
            Visible: |-
                =If(
                    !IsError(Index(chatBotVersionList,1).Value),
                    true,//Index(chatBotVersionList,1).Value
                    false
                )
            Width: |-
                =//30/CountRows(chatBotVersionList)
                If(
                    !IsError(1/CountRows(chatBotVersionList)),
                    (Parent.TemplateWidth - Self.X*2*CountRows(chatBotVersionList))/CountRows(chatBotVersionList),
                    0
                )
            X: |-
                =If(
                    !IsError(Parent.TemplateWidth/10/CountRows(chatBotVersionList)),
                    Parent.TemplateWidth/10/CountRows(chatBotVersionList),
                    0
                )
            Y: =Parent.Height - '[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Height - Self.Height
            ZIndex: =3

        "'[Delete]Line_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_1' As rectangle":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =ColorValue(CSS_COMMON.colors.bg2)
            FocusedBorderThickness: =4
            Height: =2
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: ='[Delete]DateLabel_BarChart_GPTv_Daily_Default_AIGraph_DEV_GPTv_2'.Y-1
            ZIndex: =12

    Button_Table_Filtering_AIGraph_UserSatisf As button:
        BorderColor: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(105, 121, 126, 1)
        FocusedBorderColor: =ColorFade(Self.Fill, -75%)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
        OnSelect: |+
            =Concurrent(
                Set(AIGraphStartDate,
                    Text(If(
                            DatePickerSetting = false,
                            Switch(
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                "1년", DateAdd(Today(),-12,TimeUnit.Months)
                            ), DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                        ), "yyyy-mm-dd"
                    )
                ),
                Set(AIGraphEndDate,
                    Text(If(
                        DatePickerSetting = false,
                        DateAdd(Today(),-0,TimeUnit.Months),
                        DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate
                    ), "yyyy-mm-dd"))
            );
            
            UpdateContext({AIGraphResponse: '똑실이-[Apps]AIGraphQALog분석'.Run(
                    If(
                        // LV1=전체 LV2=전체 일경우
                        Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value = DEFAULT_CATEGORY_VALUE && 
                        Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Selected.Value = DEFAULT_CATEGORY_VALUE,
                        "/?" & Substitute(Concatenate(Concat(LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1), Category_LV1LV2 & "?"),"delete_point"),"?delete_point",""),
                        If(
                            // 카테고리LV1만 선택한 경우
                            Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value <> DEFAULT_CATEGORY_VALUE && 
                            Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Selected.Value = DEFAULT_CATEGORY_VALUE,
                            Substitute(Concatenate(Concat(Filter(
                                    LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                    Category_LV1 = Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value
                                ), Category_LV1LV2 & "?"
                            ),"delete_point"), "?delete_point", ""),
                            // 카테고리LV2만 선택한 경우
                            If(
                                Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value = DEFAULT_CATEGORY_VALUE && 
                                Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Selected.Value <> DEFAULT_CATEGORY_VALUE,
                                Substitute(Concatenate(Concat(Filter(
                                        LastN(colCategoryAdmin,CountRows(colCategoryAdmin)-1),
                                        Category_LV2 = Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Selected.Value
                                    ), Category_LV1LV2 & "?"
                                ), "delete_point"), "?delete_point",""),
                                // LV1, LV2 둘다 선택한 경우
                                Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value & "/" & Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Selected.Value
                            )
                        )
                    )
                    ,{
                    // StartDate
                    text_1: AIGraphStartDate,
                    // EndDate
                    text_2: AIGraphEndDate
                }).result_json
            });
            
            ClearCollect(
                AIGraphUserSatisf,
                ForAll(
                    Table(ParseJSON(AIGraphResponse)),
                    {
                        Category_LV1: Text(ThisRecord.Value.Category_LV1),
                        Category_LV2: Text(ThisRecord.Value.Category_LV2),
                        Date: Date(Year(ThisRecord.Value.Date), Month(ThisRecord.Value.Date), Day(ThisRecord.Value.Date)),
                        IsGood: Text(ThisRecord.Value.LikeT_x002f_F),
                        IsBad: Text(ThisRecord.Value.HateT_x002f_F),
                        Token_Model: Text(ThisRecord.Value.AnswerModel),
                        Bot_Type: Text(ThisRecord.Value.Bot_Type),
                        ID: Int(ThisRecord.Value.ID)
                    }
                )
            );
            
            ClearCollect(
                AIGraphUserSatisf,
                Filter(
                    AIGraphUserSatisf,Token_Model<>Blank()
                )
            );
            
            ClearCollect(
                colCategoryAdmin_New,
                {Category_LV1: DEFAULT_CATEGORY_VALUE, Category_LV2: DEFAULT_CATEGORY_VALUE, LV1Order: 0, CategoryType: "None"},
                Filter(
                    DropColumns(
                        AIGraphUserSatisf,
                        "Bot_Type","ID","Token_Model","IsGood","IsBad"
                    ),
                    Date >= If(
                                DatePickerSetting = false,
                                Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                    "1개월", DateAdd(Today(),-1,TimeUnit.Months),
                                    "3개월", DateAdd(Today(),-3,TimeUnit.Months),
                                    "6개월", DateAdd(Today(),-6,TimeUnit.Months),
                                    "1년", DateAdd(Today(),-12,TimeUnit.Months)
                                ), DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                            ) && 
                    Date <= If(
                                DatePickerSetting = false,
                                DateAdd(Today(),-0,TimeUnit.Months),
                                DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate
                            )
                )
            );
            
            ClearCollect(
                chatBotVersionList,
                AddColumns(
                    Sort(
                        Filter(
                            Distinct(
                                AIGraphUserSatisf,
                                Token_Model
                            ), 
                            Value <> Blank()
                        ),
                        Value,
                        SortOrder.Ascending
                    ),
                    "Index",0
                )
            );
            
            ClearCollect(
                AIGraphAddColYM_All,
                AddColumns(
                    AIGraphUserSatisf,
                    "YearMonth",
                    Year(Date)*100 + Month(Date),
                    "YearMonth_",
                    Text(Year(Date)) & "년 " & Text(Month(Date)) &"월"
                )
            );
            
            If(
                Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value = "전체",
                Set(AIGraphAddColYM, AIGraphAddColYM_All),
                Set(AIGraphAddColYM, Filter(AIGraphAddColYM_All, Category_LV1=Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value))
            );
            
            If(
                AppsBIAxis.Value = "기간",
                Concurrent(
                    ClearCollect(
                        AIGraphUserSatisfMonthlyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or 
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or 
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage_Custom,
                        If(
                            DatePickerSetting = true,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    )
                ),
            /*
                Concurrent(
                    ClearCollect(
                        AIGraphUserSatisfMonthlyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "6개월" Or 
                                Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1년"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage,
                        If(
                            DatePickerSetting = false &&
                            (
                                Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or 
                                Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월"
                            ),
                            AddColumns(
                                GroupBy(AIGraphAddColYM, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    ),
                    ClearCollect(
                        AIGraphUserSatisfDailyUsage_Custom,
                        If(
                            DatePickerSetting = true,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Date", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true"))
                            )
                        )
                    )
                ),*/
                If(
                    AppsBIAxis.Value = "GPT 버전",
                    ClearCollect(
                        AIGraphGTPvUserSatisf,
                        AddColumns(
                            GroupBy(AIGraphUserSatisf, "Token_Model", "Group"),
                            "Usage_Total",
                            CountRows(Group),
                            "Usage_Good",
                            CountRows(Filter(Group, IsGood="true")),
                            "Usage_Bad",
                            CountRows(Filter(Group, IsBad="true")),
                            "Index",
                            0
                        )
                    )
                
            /*
                    Concurrent(
                        ClearCollect(
                            AIGraphGPTvMonthlyUserSatisf,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1년" Or 
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "6개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Token_Model", "Group"),
                                    "Usage_Total",
                                    CountRows(Group),
                                    "Usage_Good",
                                    CountRows(Filter(Group, IsGood="true")),
                                    "Usage_Bad",
                                    CountRows(Filter(Group, IsBad="true"))
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvDailyUserSatisf,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or 
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월"
                                ),
                                AddColumns(
                                    //GroupBy(AIGraphAddColYM, "Date", "Token_Model", "Group"),
                                    GroupBy(AIGraphAddColYM, "Date", "Token_Model", "Group"),
                                    "Usage_Total",
                                    CountRows(Group),
                                    "Usage_Good",
                                    CountRows(Filter(Group, IsGood="true")),
                                    "Usage_Bad",
                                    CountRows(Filter(Group, IsBad="true"))
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvUserSatisfMonthlyXAxis,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1년" Or 
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "6개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "YearMonth", "YearMonth_", "Group"),
                                    "Usage_Total",
                                    CountRows(Group)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvUserSatisfDailyXAxis,
                            If(
                                DatePickerSetting = false &&
                                (
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "1개월" Or 
                                    Dropdown_DatePicker_AIGraph_DEV_2.SelectedText.Value = "3개월"
                                ),
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "Date", "Group"),
                                    "Usage_Total",
                                    CountRows(Group)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvUserSatisfDailyUsage_Custom,
                            If(
                                DatePickerSetting = true,
                                AddColumns(
                                    GroupBy(AIGraphAddColYM, "Date", "Token_Model", "Group"),
                                    "Usage_Total",
                                    CountRows(Group)
                                )
                            )
                        ),
                        ClearCollect(
                            AIGraphGPTvUserSatisfDailyXAxis_Custom,
                            If(
                                DatePickerSetting = true,
                                AddColumns(
                                    GroupBy(AIGraphUserSatisf, "Date", "Group"),
                                    "Usage_Total",
                                    CountRows(Group),
                                    "Usage_Good",
                                    CountRows(Filter(Group, IsGood="true")),
                                    "Usage_Bad",
                                    CountRows(Filter(Group, IsBad="true"))
                                )
                            )
                        )
                    )
                    */
                    ,
            
                    If(
                        AppsBIAxis.Value = "카테고리",
                        ClearCollect(
                            AIGraphCategoryLV1UserSatisf,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Category_LV1", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true")),
                                "Token_UsageRate",
                                Text(Int(CountRows(Group) / CountRows(Filter(AIGraphUserSatisf, Category_LV1)) * 10000) / 100, "#0.0#%"),
                                "Index",
                                0
                            )
                        );
                        ClearCollect(
                            AIGraphCategoryLV2UserSatisf,
                            AddColumns(
                                GroupBy(AIGraphUserSatisf, "Category_LV2", "Group"),
                                "Usage_Total",
                                CountRows(Group),
                                "Usage_Good",
                                CountRows(Filter(Group, IsGood="true")),
                                "Usage_Bad",
                                CountRows(Filter(Group, IsBad="true")),
                                "Token_UsageRate",
                                Text(Int(CountRows(Group) / CountRows(Filter(AIGraphUserSatisf, Category_LV2)) * 10000) / 100, "#0.0#%"),
                                "Index",
                                0
                            )
                        )
                    )
                )
            );
            
            If(
                AppsBIAxis.Value = "GPT 버전",
                
                ForAll(
                    Sequence(CountRows(AIGraphGTPvUserSatisf)),
                    Patch(
                        AIGraphGTPvUserSatisf,
                        Index(AIGraphGTPvUserSatisf, Value),
                        {Index: Value}
                    )
                ),
                If(
                    AppsBIAxis.Value = "카테고리",
                    Concurrent(
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV1UserSatisf)),
                            Patch(
                                AIGraphCategoryLV1UserSatisf,
                                Index(AIGraphCategoryLV1UserSatisf, Value),
                                {Index: Value}
                            )
                        ),
                        ForAll(
                            Sequence(CountRows(AIGraphCategoryLV2UserSatisf)),
                            Patch(
                                AIGraphCategoryLV2UserSatisf,
                                Index(AIGraphCategoryLV2UserSatisf, Value),
                                {Index: Value}
                            )
                        )
                    )
                )
            );
            
            
            UpdateContext({ 
                locLoadingSpinner: false
            });
            
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =15
        Text: ="버튼"
        X: =1310
        Y: =1040
        ZIndex: =7

    Label_For_TEST_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Size: =13
        Text: =CountRows(AIGraphUserSatisfMonthlyUsage)
        X: =1144
        Y: =1040
        ZIndex: =8

    Label_GalleryFilter_Category_AIGraph_UserSatisf As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =32
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="카테고리"
        Width: =80
        X: =BG_Filtering_AIGraph_UserSatisf.X + 38
        Y: =BG_Filtering_AIGraph_UserSatisf.Y + BG_Filtering_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =9

    Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =SelectedLV1_AIGraph
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Filter(
                Distinct(
                    colCategoryAdmin_New,
                    Category_LV1
                ),
                Value <> Blank()
            )
        OnChange: |-
            =Set(SelectedLV1_AIGraph, Self.Selected.Value);
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Select(Button_Table_Filtering_AIGraph_UserSatisf)
        PaddingBottom: =4
        PaddingLeft: =4
        PaddingRight: =4
        PaddingTop: =4
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV1을 선택해주세요"
        Width: =200
        X: |
            =Label_GalleryFilter_Category_AIGraph_UserSatisf.X + Label_GalleryFilter_Category_AIGraph_UserSatisf.Width + 8
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y
        ZIndex: =10

    Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =1
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =SelectedLV2_AIGraph
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: |-
            =Filter(
                If(
                    Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value = DEFAULT_CATEGORY_VALUE,
                    // 카테고리 LV1 이 전체로 선택되어 있을경우
                    Distinct(
                        colCategoryAdmin_New,
                        Category_LV2
                    ),
                    // 카테고리 LV1 이 전체가 아닌 다른걸로 선택되어 있을경우
                    Distinct(
                        Filter(
                            colCategoryAdmin_New,
                            Category_LV1 = DEFAULT_CATEGORY_VALUE || Category_LV1 = Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value
                        ),
                        Category_LV2
                    )
                ),
                Value <> Blank()
            )
        OnChange: |-
            =Set(SelectedLV2_AIGraph, Self.Selected.Value);
            Select(Button_Table_Filtering_AIGraph_UserSatisf)
        PaddingBottom: =4
        PaddingLeft: =4
        PaddingRight: =4
        PaddingTop: =4
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Tooltip: ="카테고리 LV2을 선택해주세요"
        Width: =200
        X: ='Label_GalleryFilter_>_AIGraph_UserSatisf'.X + 'Label_GalleryFilter_>_AIGraph_UserSatisf'.Width
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y
        ZIndex: =11

    "'Label_GalleryFilter_>_AIGraph_UserSatisf' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Font: =Font.'Segoe UI'
        PaddingLeft: =0
        PaddingRight: =0
        Text: =">"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.X + Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Width
        Y: =Label_GalleryFilter_Category_AIGraph_UserSatisf.Y + Label_GalleryFilter_Category_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =12

    Label_DatePicker_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: ="기간"
        Width: =40
        X: =Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.X + Dropdown_GalleryFilter_CategoryLV2_AIGraph_UserSatisf.Width + 24
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =13

    "'Label_DatePicker_>_AIGraph_UserSatisf' As label":
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접설정", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =39
        PaddingLeft: =0
        PaddingRight: =0
        Text: =">"
        Width: =40
        X: =DatePicker_FirstDate_AIGraph_UserSatisf.X + DatePicker_FirstDate_AIGraph_UserSatisf.Width
        Y: ='Label_GalleryFilter_>_AIGraph_UserSatisf'.Y
        ZIndex: =14

    DatePicker_FirstDate_AIGraph_UserSatisf As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DefaultDate: =DateAdd(Today(),-1,TimeUnit.Months)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접설정", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingTop: =5
        Reset: |
            =If(Self.Visible=true, true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        StartYear: =Year(Today())-1
        Width: |
            =200
        X: =Dropdown_DatePicker_AIGraph_UserSatisf.X + Dropdown_DatePicker_AIGraph_UserSatisf.Width + 10
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =15

    DatePicker_LastDate_AIGraph_UserSatisf As datepicker:
        BorderColor: =RGBA(166, 166, 166, 1)
        CalendarHeaderFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        DisplayMode: =If(Dropdown_DatePicker_AIGraph_UserSatisf.Selected.Value="직접설정", DisplayMode.Edit, DisplayMode.Disabled)
        Font: =Font.'Segoe UI'
        Height: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Height
        HoverDateFill: =RGBA(200, 200, 200, 1)
        IconBackground: =RGBA(105, 121, 126, 1)
        OnChange: =Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingTop: =5
        Reset: |
            =If(Self.Visible=true, true, false)
        SelectedDateFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: |
            =200
        X: ='Label_DatePicker_>_AIGraph_UserSatisf'.X + 'Label_DatePicker_>_AIGraph_UserSatisf'.Width
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
        ZIndex: =16

    Dropdown_DatePicker_AIGraph_UserSatisf As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_UserSatisf.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =["1개월", "3개월", "6개월", "1년", "직접설정"]
        OnChange: |-
            =Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE);
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            
            If(
                Self.Selected.Value = "직접설정",
                Set(DatePickerSetting,true),
                Set(DatePickerSetting,false)
            );
            
            Select(Button_Table_Filtering_AIGraph_UserSatisf)
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Reset: =If(Self.Visible=true, true, false)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: =150
        X: =Label_DatePicker_AIGraph_UserSatisf.X + Label_DatePicker_AIGraph_UserSatisf.Width + 8
        Y: =DatePicker_FirstDate_AIGraph_UserSatisf.Y
        ZIndex: =19

    LineChart_Default_Monthly_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                    Filter(
                        AIGraphTokenMonthlyUsage,
                        (
                            YearMonth >= 
                            Switch(
                                Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                    "6개월",
                                Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                    "1년",
                                Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                            )
                        ) &&
                        (
                            YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                        ),YearMonth_ <> Blank()
                    )
                )
            )
        Markers: |-
            =If(
                CountRows(
                        If(
                            Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "1년" Or Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "6개월",
                            Filter(
                                AIGraphTokenMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),YearMonth_ <> Blank()
                            )
                        )
                ) = 1,
                true,
                false
            )
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And LineChart_Default_Daily_AIGraph_UserSatisf.Visible = false And AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_UserSatisf.Width
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =22

    LineChart_Default_Daily_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =675
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    Filter(
                        AIGraphUserSatisfDailyUsage,
                        (
                            Date >= Switch(
                                Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                    "1개월",
                                DateAdd(Today(),-1,TimeUnit.Months),
                                    "3개월",
                                DateAdd(Today(),-3,TimeUnit.Months)
                            )
                        ) && (
                            Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                        )
                    )
                )
            )
        Markers: |-
            =If(
                CountRows(
                    If(
                        Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "1개월" Or Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "3개월",
                        Filter(
                            AIGraphTokenDailyUsage,
                            (
                                Token_Date >= 
                                Switch(
                                    Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value,
                                        "1개월",
                                    Int(Text(DateAdd(Today(),-1,TimeUnit.Months), "yyyymm")),
                                        "3개월",
                                    Int(Text(DateAdd(Today(),-3,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                Token_Date <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),Token_Date <> Blank()
                        )
                    )
                ) = 1,
                true,
                false
            )
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = false And AppsBIAxis.Value = "기간",
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    true,
                    false
                ),
                false
            )
        Width: =BG_Graph_AIGraph_UserSatisf.Width - 60
        X: =340
        Y: =340
        ZIndex: =23

    Group_RadioFilter_Category_AIGraph_UserSatisf As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =23

        Radio_ChartView_AIGraph_UserSatisf As 라디오.pcfdataset:
            DefaultSelectedItems: =First(AxisPickingList)
            DisplayMode: =DisplayMode.Edit
            Font: =Font.'Open Sans'
            FontColor: =RGBA(0, 0, 0, 1)
            FontSize: =20
            FontWeight: =FontWeight.Normal
            Height: |
                =50
            Items: =AxisPickingList
            Layout: ='RadioGroupCanvas.Layout'.Horizontal
            OnChange: |-
                =Set(AppsBIAxis, Self.Selected);
                Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE);
                Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
                Select(Button_Table_Filtering_AIGraph_UserSatisf);
            OnSelect: =Set(AppsBIAxis, LookUp(AxisPickingList, Value=ThisRecord.Value))
            Required: =true 
            Visible: =false
            Width: =537
            X: =1383
            Y: =55
            ZIndex: =20

        Label_RadioFilter_Category_AIGraph_UserSatisf As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(CSS_COMMON.colors.fg)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =DatePicker_LastDate_AIGraph_UserSatisf.Height
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="비교방식"
            Width: =80
            X: =DatePicker_LastDate_AIGraph_UserSatisf.X + DatePicker_LastDate_AIGraph_UserSatisf.Width + 24
            Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Y
            ZIndex: =21

    LineChart_Custom_Daily_AIGraph_UserSatisf As lineChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =LineChart_Default_Daily_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraph_ColorLists
        Items: |-
            =If(
                DatePickerSetting = true,
                Filter(
                    AIGraphUserSatisfDailyUsage_Custom,
                    (
                        Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                    ) && (
                        Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate //
                    )
                )
            )
        Markers: |-
            =If(
                CountRows(
                    If(
                        Dropdown_AxisPicker_AIGraph_TokenUsage_1.SelectedText.Value = "직접선택",
                        Filter(
                            AIGraphTokenDailyUsage_Custom,
                            Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate &&
                            Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate,
                            Token_Date <> Blank()
                        )
                    )
                ) = 1,
                true,
                false
            )
        NumberOfSeries: =3
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                DatePickerSetting = true And AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =LineChart_Default_Daily_AIGraph_UserSatisf.Width
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =24

    Label_Token_Input_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: ="만족했어요"
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =1500
        Y: =340
        ZIndex: =25

    Label_Token_Output_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: ="별로에요"
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X
        Y: =430
        ZIndex: =26

    Label_Token_Total_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: ="잘모르겠어요"
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X
        Y: =520
        ZIndex: =27

    Value_Token_Input_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |
            =Text(
                Int('[Hidden]Value_Token_Input_AIGraph_UserSatisf'.Text),
                "###,###,###,##0"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X + Label_Token_Input_AIGraph_UserSatisf.Width
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y
        ZIndex: =28

    Value_Token_Output_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =Text(
                Int('[Hidden]Value_Token_Output_AIGraph_UserSatisf'.Text),
                "###,###,###,##0"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =Label_Token_Output_AIGraph_UserSatisf.X + Label_Token_Output_AIGraph_UserSatisf.Width
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y
        ZIndex: =29

    Value_Token_Total_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =Text(
                Int('[Hidden]Value_Token_Total_AIGraph_UserSatisf'.Text),
                "###,###,###,##0"
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =200
        X: =Label_Token_Total_AIGraph_UserSatisf.X + Label_Token_Total_AIGraph_UserSatisf.Width
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y
        ZIndex: =30

    Color_Token_Input_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(96, 197, 234, 1)
        Fill: =RGBA(96, 197, 234, 1)
        FocusedBorderThickness: =4
        Height: =5
        HoverFill: =RGBA(96, 197, 234, 1)
        PressedFill: =RGBA(96, 197, 234, 1)
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Input_AIGraph_UserSatisf.X - Self.Width
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y+Label_Token_Input_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =31

    Color_Token_Output_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(212,96,104,1)
        Fill: =RGBA(212,96,104,1)
        FocusedBorderThickness: =4
        Height: =5
        HoverFill: =RGBA(212,96,104,1)
        PressedFill: =RGBA(212,96,104,1)
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Output_AIGraph_UserSatisf.X - Self.Width
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y+Label_Token_Output_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =32

    Color_Token_Total_AIGraph_UserSatisf As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(247,199,114,1)
        Fill: =RGBA(247,199,114,1)
        FocusedBorderThickness: =4
        Height: =5
        HoverFill: =RGBA(247,199,114,1)
        PressedFill: =RGBA(247,199,114,1)
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =30
        X: =Label_Token_Total_AIGraph_UserSatisf.X - Self.Width
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y+Label_Token_Total_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =33

    "'[Hidden]Value_Token_Input_AIGraph_UserSatisf' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    Sum(
                        Filter(//AIGraphUserSatisfDailyUsage
                            AIGraphUserSatisfDailyUsage,
                            (
                                Date >= Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "1개월",
                                    DateAdd(Today(),-1,TimeUnit.Months),
                                        "3개월",
                                    DateAdd(Today(),-3,TimeUnit.Months)
                                )
                            ) && (
                                Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                            )
                        ), Usage_Good
                    ),
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                    Sum(
                        Filter(
                            AIGraphUserSatisfMonthlyUsage,
                            (
                                YearMonth >= 
                                Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "6개월",
                                    Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                        "1년",
                                    Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),
                            YearMonth_ <> Blank()
                        ), Usage_Good
                    )
                )),
            If(
                DatePickerSetting = true,
                Sum(
                    Filter(
                        AIGraphUserSatisfDailyUsage_Custom,
                        (
                            Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                        ) && (
                            Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                        )
                    ),Usage_Good
                )
            ))
        Visible: =false
        Width: =200
        X: =Label_Token_Input_AIGraph_UserSatisf.X + Label_Token_Input_AIGraph_UserSatisf.Width
        Y: =Label_Token_Input_AIGraph_UserSatisf.Y
        ZIndex: =34

    "'[Hidden]Value_Token_Output_AIGraph_UserSatisf' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    Sum(
                        Filter(//AIGraphUserSatisfDailyUsage
                            AIGraphUserSatisfDailyUsage,
                            (
                                Date >= Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "1개월",
                                    DateAdd(Today(),-1,TimeUnit.Months),
                                        "3개월",
                                    DateAdd(Today(),-3,TimeUnit.Months)
                                )
                            ) && (
                                Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                            )
                        ), Usage_Bad
                    ),
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                    Sum(
                        Filter(
                            AIGraphUserSatisfMonthlyUsage,
                            (
                                YearMonth >= 
                                Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "6개월",
                                    Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                        "1년",
                                    Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),
                            YearMonth_ <> Blank()
                        ), Usage_Bad
                    )
                )),
            If(
                DatePickerSetting = true,
                Sum(
                    Filter(
                        AIGraphUserSatisfDailyUsage_Custom,
                        (
                            Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                        ) && (
                            Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                        )
                    ),Usage_Bad
                )
            ))
        Visible: =false
        Width: =200
        X: =Label_Token_Output_AIGraph_UserSatisf.X + Label_Token_Output_AIGraph_UserSatisf.Width
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y
        ZIndex: =35

    "'[Hidden]Value_Token_Total_AIGraph_UserSatisf' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =If(
                DatePickerSetting = false,
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                    Sum(
                        Filter(//AIGraphUserSatisfDailyUsage
                            AIGraphUserSatisfDailyUsage,
                            (
                                Date >= Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "1개월",
                                    DateAdd(Today(),-1,TimeUnit.Months),
                                        "3개월",
                                    DateAdd(Today(),-3,TimeUnit.Months)
                                )
                            ) && (
                                Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                            )
                        ), Usage_Total
                    ),
                If(
                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                    Sum(
                        Filter(
                            AIGraphUserSatisfMonthlyUsage,
                            (
                                YearMonth >= 
                                Switch(
                                    Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                        "6개월",
                                    Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                        "1년",
                                    Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                )
                            ) &&
                            (
                                YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                            ),
                            YearMonth_ <> Blank()
                        ), Usage_Total
                    )
                )),
            If(
                DatePickerSetting = true,
                Sum(
                    Filter(
                        AIGraphUserSatisfDailyUsage_Custom,
                        (
                            Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                        ) && (
                            Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                        )
                    ),Usage_Total
                )
            ))
        Visible: =false
        Width: =200
        X: =Label_Token_Total_AIGraph_UserSatisf.X + Label_Token_Total_AIGraph_UserSatisf.Width
        Y: =Label_Token_Total_AIGraph_UserSatisf.Y
        ZIndex: =36

    "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_0' As label":
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Size: =20
        Text: |-
            =    If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                )
                            ), Token_Total
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphGPTvMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank()
                            ), Token_Total
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphGPTvDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                            )
                        ),Token_Total
                    )/100
                ))
        Visible: =false
        Width: =200
        X: =Label_Token_Output_AIGraph_UserSatisf.X + Label_Token_Output_AIGraph_UserSatisf.Width
        Y: =Label_Token_Output_AIGraph_UserSatisf.Y
        ZIndex: =37

    "Gallery_GPTv_Usage_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =Value_Token_Total_AIGraph_UserSatisf.Y + Value_Token_Total_AIGraph_UserSatisf.Height - Value_Token_Input_AIGraph_UserSatisf.Y
        Items: =chatBotVersionList
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        TemplatePadding: =0
        TemplateSize: |-
            =If(
                !IsError(Self.Height / Self.AllItemsCount),
                If(
                    Self.Height / Self.AllItemsCount > 40,
                    Self.Height / Self.AllItemsCount,
                    40
                ),
                0
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                If(
                    CountRows(AIGraphGTPvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGTPvUserSatisf).Token_Model),
                    true
                ),
                false
            )
        Width: =Value_Token_Input_AIGraph_UserSatisf.X + Value_Token_Input_AIGraph_UserSatisf.Width - Label_Token_Input_AIGraph_UserSatisf.X
        X: ='[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.Width + '[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.X + 10
        Y: =Label_GPTv_Total_AIGraph_UserSatisf_0.Y + Label_GPTv_Total_AIGraph_UserSatisf_0.Height
        ZIndex: =38

        Color_GPTv_Total_AIGraph_UserSatisf_1 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: |-
                =IfError(
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                chatBotVersionList,
                                Value <> Blank()
                            ),
                            Value=ThisItem.Value,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                chatBotVersionList,
                                Value <> Blank()
                            ),
                            Value=ThisItem.Value,
                            Index
                        )
                    ).Value
                )
            FocusedBorderThickness: =4
            Height: =5
            HoverFill: =RGBA(105, 121, 126, 1)
            OnSelect: =Select(Parent)
            PressedFill: =RGBA(105, 121, 126, 1)
            Visible: =false
            Width: =30
            X: =Label_GPTv_Total_AIGraph_UserSatisf_1.X - Self.Width - 10
            Y: =Label_GPTv_Total_AIGraph_UserSatisf_1.Y+Label_GPTv_Total_AIGraph_UserSatisf_1.Height/2 - Self.Height/2
            ZIndex: =1

        Label_GPTv_Total_AIGraph_UserSatisf_1 As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =20
            Text: |-
                =Upper(
                    If(
                        IsBlank(Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")),
                        "gpt3.5",
                        Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")
                    )
                )
            Width: =200
            X: =Color_GPTv_Total_AIGraph_UserSatisf_1.Width + 10
            Y: =5
            ZIndex: =2

        Value_GPTv_Total_AIGraph_UserSatisf_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Height: =Label_GPTv_Total_AIGraph_UserSatisf_1.Height
            OnSelect: =Select(Parent)
            Size: =20
            Text: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                    Text(
                        Int(
                            Sum(
                                Filter(
                                    AIGraphGTPvUserSatisf,
                                    Token_Model = ThisItem.Value
                                ),
                                Usage_Good
                            )/Sum(
                                Filter(
                                    AIGraphGTPvUserSatisf,
                                    Token_Model = ThisItem.Value
                                ),
                                Usage_Total
                            )*10000)/100, 
                        "#0.0# %"
                    ), 
                    0
                )
            Width: =Parent.TemplateWidth - Label_GPTv_Total_AIGraph_UserSatisf_1.Width - Color_GPTv_Total_AIGraph_UserSatisf_1.Width
            X: =Label_GPTv_Total_AIGraph_UserSatisf_1.X + Label_GPTv_Total_AIGraph_UserSatisf_1.Width
            Y: =Label_GPTv_Total_AIGraph_UserSatisf_1.Y
            ZIndex: =3

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_1' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            Size: =13
            Text: |-
                =If(
                    DatePickerSetting = false,
                    If(
                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage,
                                (
                                    Token_Date >= Switch(
                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                            "1개월",
                                        DateAdd(Today(),-1,TimeUnit.Months),
                                            "3개월",
                                        DateAdd(Today(),-3,TimeUnit.Months)
                                    )
                                ) && (
                                    Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                ),
                                Token_Model=ThisItem.Value
                            ), Token_Total
                        )/100,
                    If(
                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                        Sum(
                            Filter(
                                AIGraphGPTvMonthlyUsage,
                                (
                                    YearMonth >= 
                                    Switch(
                                        Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                            "6개월",
                                        Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                            "1년",
                                        Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                    )
                                ) &&
                                (
                                    YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                ),
                                YearMonth_ <> Blank(),
                                Token_Model=ThisItem.Value
                            ), Token_Total
                        )/100
                    )),
                If(
                    DatePickerSetting = true,
                    Sum(
                        Filter(
                            AIGraphGPTvDailyUsage_Custom,
                            (
                                Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                            ) && (
                                Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                            ),
                            Token_Model=ThisItem.Value
                        ),Token_Total
                    )/100
                ))
            Visible: =false
            X: =250
            Y: =65
            ZIndex: =4

    Color_GPTv_Total_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(105, 121, 126, 1)
        FocusedBorderThickness: =4
        Height: =5
        HoverFill: =RGBA(105, 121, 126, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Visible: |-
            =//Gallery_GPTv_Usage_AIGraph_DEV_2.Visible
            false
        Width: =30
        X: =Gallery_GPTv_Usage_AIGraph_UserSatisf.X
        Y: =Label_GPTv_Total_AIGraph_UserSatisf_0.Y + Label_GPTv_Total_AIGraph_UserSatisf_0.Height/2 - Self.Height/2
        ZIndex: =39

    Label_GPTv_Total_AIGraph_UserSatisf_0 As label:
        Color: =RGBA(50, 49, 48, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FontWeight: =FontWeight.Semibold
        Height: |-
            =/*If(
                !IsError((Value_Token_Total_AIGraph_DEV_1.Y + Value_Token_Total_AIGraph_DEV_1.Height - Value_Token_Input_AIGraph_DEV_1.Y) / CountRows(chatBotVersionList)),
                If(
                    (Value_Token_Total_AIGraph_DEV_1.Y + Value_Token_Total_AIGraph_DEV_1.Height - Value_Token_Input_AIGraph_DEV_1.Y) / CountRows(chatBotVersionList) > 40,
                    (Value_Token_Total_AIGraph_DEV_1.Y + Value_Token_Total_AIGraph_DEV_1.Height - Value_Token_Input_AIGraph_DEV_1.Y) / CountRows(chatBotVersionList),
                    40
                ),
                0
            )*/
            
            Switch(
                CountRows(chatBotVersionList),
                0, 80,
                1, 80,
                (Value_Token_Total_AIGraph_UserSatisf.Y + Value_Token_Total_AIGraph_UserSatisf.Height - Value_Token_Input_AIGraph_UserSatisf.Y) / CountRows(chatBotVersionList)
            )
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Size: =20
        Text: ="전체 만족도"
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =200
        X: =Color_GPTv_Total_AIGraph_UserSatisf_0.X + Color_GPTv_Total_AIGraph_UserSatisf_0.Width + 10
        Y: |
            =275
        ZIndex: =40

    Value_GPTv_Total_AIGraph_UserSatisf_0 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Height: =Label_GPTv_Total_AIGraph_UserSatisf_0.Height
        Size: =20
        Text: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                Text(Int(Sum(AIGraphGTPvUserSatisf,Usage_Good)/Sum(AIGraphGTPvUserSatisf,Usage_Total)*10000)/100, "#0.0# %"), 
                0
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =170
        X: =Label_GPTv_Total_AIGraph_UserSatisf_0.X + Label_GPTv_Total_AIGraph_UserSatisf_0.Width
        Y: =Label_GPTv_Total_AIGraph_UserSatisf_0.Y
        ZIndex: =41

    PieChart_GPTv_Usage_AIGraph_UserSatisf As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =[AIGraph_Col1, AIGraph_Col2, AIGraph_Col3, AIGraph_Col4, AIGraph_Col5, AIGraph_Col6, AIGraph_Col7, AIGraph_Col8, AIGraph_Col9]
        Items: |-
            =[
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,1).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,2).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,3).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,4).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,5).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,6).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,7).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,8).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                ),
                Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=Index(chatBotVersionList,9).Value,
                        Usage_Total
                    )/Sum(
                        AIGraphGTPvUserSatisf,
                        Usage_Total
                    ) * 100, 
                    "#0.0#%"
                )
            ]
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =PieChart_Token_Usage_AIGraph_UserSatisf.Width
        X: =PieChart_Token_Usage_AIGraph_UserSatisf.X
        Y: =PieChart_Token_Usage_AIGraph_UserSatisf.Y
        ZIndex: =42

    PieChart_Token_Usage_AIGraph_UserSatisf As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =500
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =[RGBA(96, 197, 234, 1), RGBA(212,96,104,1), RGBA(247,199,114,1)]
        Items: |-
            =[
                Text(
                    Int('[Hidden]Value_Token_Input_AIGraph_UserSatisf'.Text) / (
                    Int('[Hidden]Value_Token_Input_AIGraph_UserSatisf'.Text) +
                    Int('[Hidden]Value_Token_Output_AIGraph_UserSatisf'.Text)
                ) * 100, "##.0#%"),
                Text(
                    Int('[Hidden]Value_Token_Output_AIGraph_UserSatisf'.Text) / (
                    Int('[Hidden]Value_Token_Input_AIGraph_UserSatisf'.Text) +
                    Int('[Hidden]Value_Token_Output_AIGraph_UserSatisf'.Text)
                ) * 100, "##.0#%")
            ]
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: |-
            =If(
                AppsBIAxis.Value = "기간",
                true,
                false
            )
        Width: =500
        X: =1425
        Y: =575
        ZIndex: =43

    Label_PieChart_AIGraph_UserSatisf As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: =28
        Size: =20
        Text: =First(똑실이_ChatbotText_table).BotName & " 답변 사용 비율"
        Width: =400
        X: =PieChart_Token_Usage_AIGraph_UserSatisf.X + PieChart_Token_Usage_AIGraph_UserSatisf.Width/2 - Self.Width/2
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y
        ZIndex: =44

    "BarChart_LV1Category_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: ='[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.Height
        Items: |-
            =SortByColumns(
                Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank()
                ),"Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: |-
            =IfError(
                Self.Height/CountRows(AIGraphCategoryLV1UserSatisf),
                0,
                If(
                    CountRows(AIGraphCategoryLV1UserSatisf) = 1, 
                    80,
                    If(
                        Self.Height/CountRows(AIGraphCategoryLV1UserSatisf) < 60,
                        60,
                        Self.Height/CountRows(AIGraphCategoryLV1UserSatisf)
                    )
                )
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value = "전체",
                true,
                false
            )
        Width: ='[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.Width
        X: ='[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.X
        Y: ='[Delete]BarChart_GPTv_Default_Daily_AIGraph_DEV_UserSatisf'.Y
        ZIndex: =54

        Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Category_LV1
            Width: =135
            Y: =5
            ZIndex: =2

        Bar_BarChart_LV1Category_Daily_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: |-
                =IfError(
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value
                )
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    !IsError(1/CountRows(Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank()
                ))),
                    (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 20) - (
                        (
                            Max(Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank()
                ),Usage_Total) - 
                            LookUp(
                                Filter(
                                    Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank()
                ),
                                    Category_LV1=ThisItem.Category_LV1
                                ),
                                Category_LV1=ThisItem.Category_LV1,
                                Usage_Total
                            )
                        ) / Max(Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank()
                ),Usage_Total)
                    ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 20),
                    0
                )
            X: =Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Value_BarChart_LV1Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =Text(ThisItem.Usage_Total, "###,###,###,##0")
            Width: =135
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =5
            ZIndex: =4

    "'[Hidden]Group_Value_GPTv_Total_AIGraph_UserSatisf' As group":
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =54

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_2' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,1).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,1).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,1).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =45

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_3' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,2).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,2).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,2).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =46

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_4' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,3).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,3).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,3).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =47

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_5' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,4).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,4).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,4).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =48

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_6' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,5).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,5).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,5).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =49

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_7' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,6).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,6).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,6).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =50

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_8' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,7).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,7).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,7).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =51

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_9' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,8).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,8).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,8).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =52

        "'[Hidden]Value_GPTv_Total_AIGraph_UserSatisf_10' As label":
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            FontWeight: =FontWeight.Semibold
            Size: =20
            Text: |-
                =If(
                    !IsError(Index(chatBotVersionList,9).Value),
                    If(
                        DatePickerSetting = false,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "3개월",
                            Sum(
                                Filter(
                                    AIGraphGPTvDailyUsage,
                                    (
                                        Token_Date >= Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "1개월",
                                            DateAdd(Today(),-1,TimeUnit.Months),
                                                "3개월",
                                            DateAdd(Today(),-3,TimeUnit.Months)
                                        )
                                    ) && (
                                        Token_Date <= DateAdd(Today(),-0,TimeUnit.Months) //DatePicker_LastDate_AIGraph_DEV_1.SelectedDate
                                    ),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100,
                        If(
                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "6개월" Or Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value = "1년",
                            Sum(
                                Filter(
                                    AIGraphGPTvMonthlyUsage,
                                    (
                                        YearMonth >= 
                                        Switch(
                                            Dropdown_DatePicker_AIGraph_UserSatisf.SelectedText.Value,
                                                "6개월",
                                            Int(Text(DateAdd(Today(),-6,TimeUnit.Months), "yyyymm")),
                                                "1년",
                                            Int(Text(DateAdd(Today(),-12,TimeUnit.Months), "yyyymm"))
                                        )
                                    ) &&
                                    (
                                        YearMonth <= Int(Text(DateAdd(Today(),-0,TimeUnit.Months), "yyyymm"))
                                    ),
                                    YearMonth_ <> Blank(),
                                    Token_Model=Index(chatBotVersionList,9).Value
                                ), Token_Total
                            )/100
                        )),
                    If(
                        DatePickerSetting = true,
                        Sum(
                            Filter(
                                AIGraphGPTvDailyUsage_Custom,
                                (
                                    Token_Date >= DatePicker_FirstDate_AIGraph_UserSatisf.SelectedDate
                                ) && (
                                    Token_Date <= DatePicker_LastDate_AIGraph_UserSatisf.SelectedDate 
                                ),
                                Token_Model=Index(chatBotVersionList,9).Value
                            ),Token_Total
                        )/100
                    )),
                    0
                )
            Visible: =false
            Width: =200
            X: =1720
            Y: |
                =0
            ZIndex: =53

    "BarChart_LV2Category_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Height
        Items: |-
            =SortByColumns(
                Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank()
                ),"Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        TemplatePadding: =0
        TemplateSize: |-
            =IfError(
                Self.Height/CountRows(AIGraphCategoryLV2UserSatisf),
                0,
                If(
                    CountRows(AIGraphCategoryLV2UserSatisf) = 1, 
                    80,
                    If(
                        Self.Height/CountRows(AIGraphCategoryLV2UserSatisf) < 60,
                        60,
                        Self.Height/CountRows(AIGraphCategoryLV2UserSatisf)
                    )
                )
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "카테고리" And Dropdown_GalleryFilter_CategoryLV1_AIGraph_UserSatisf.Selected.Value <> "전체",
                true,
                false
            )
        Width: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width
        X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.X
        Y: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Y
        ZIndex: =55

        Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Category_LV2
            Width: =135
            Y: =5
            ZIndex: =2

        Bar_BarChart_LV2Category_Daily_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: |-
                =IfError(
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value
                )
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    !IsError(1/CountRows(Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank()
                ))),
                    (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 20) - (
                        (
                            Max(Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank()
                ),Usage_Total) - 
                            LookUp(
                                Filter(
                                    Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank()
                ),
                                    Category_LV2=ThisItem.Category_LV2
                                ),
                                Category_LV2=ThisItem.Category_LV2,
                                Usage_Total
                            )
                        ) / Max(Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank()
                ),Usage_Total)
                    ) * (Parent.Width - Label_BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - 20),
                    0
                )
            X: =Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Daily_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Value_BarChart_LV2Category_Daily_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =Text(ThisItem.Usage_Total, "###,###,###,##0")
            Width: =135
            X: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =5
            ZIndex: =4

    PieChart_LV1Category_Usage_AIGraph_UserSatisf As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraphColorLists
        Items: |-
            =Filter(
                AIGraphCategoryLV1UserSatisf,
                Category_LV1 <> Blank(),Token_UsageRate
            )
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Visible
        Width: =PieChart_Token_Usage_AIGraph_UserSatisf.Width
        X: =1420
        Y: =PieChart_Token_Usage_AIGraph_UserSatisf.Y
        ZIndex: =56

    PieChart_LV2Category_Usage_AIGraph_UserSatisf As pieChart:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        Height: =PieChart_Token_Usage_AIGraph_UserSatisf.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        ItemColorSet: =AIGraphColorLists
        Items: |-
            =Filter(
                AIGraphCategoryLV2UserSatisf,
                Category_LV2 <> Blank()
            )
        LabelPosition: =LabelPosition.Inside
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        Size: =15
        Visible: =BarChart_LV2Category_Daily_AIGraph_UserSatisf.Visible
        Width: =PieChart_Token_Usage_AIGraph_UserSatisf.Width
        X: =1420
        Y: =PieChart_Token_Usage_AIGraph_UserSatisf.Y
        ZIndex: =57

    "BarChart_GPTv_Default_Daily_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =500
        Items: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                If(
                    !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                    Filter(Distinct(AIGraphGTPvUserSatisf, Token_Model),Value<>Blank())
                ),
                Blank()
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: |-
            =IfError(
                If(
                    CountRows(Filter(AIGraphGTPvUserSatisf,Token_Model<>Blank())) > 5,
                    150,
                    Self.Height / CountRows(Filter(AIGraphGTPvUserSatisf,Token_Model<>Blank()))
                ),
                0,
                If(
                    CountRows(Filter(AIGraphGTPvUserSatisf,Token_Model<>Blank())) > 5,
                    150,
                    Self.Height / CountRows(Filter(AIGraphGTPvUserSatisf,Token_Model<>Blank()))
                )
            )
        Visible: |-
            =If(
                AppsBIAxis.Value = "GPT 버전",
                true,
                false
            )
        Width: =1100
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height
        ZIndex: =58

        DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Parent.TemplateHeight - Self.Y*2
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =16
            Text: |-
                =Upper(
                    If(
                        IsBlank(Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")),
                        "gpt3.5",
                        Substitute(Substitute(ThisItem.Value, "chat", ""), "_", "")
                    )
                )
            Width: =135
            Y: =5
            ZIndex: =1

        Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =AIGraph_Col1
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                    (
                        (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20) - (
                            (
                                Sum(AIGraphGTPvUserSatisf,Usage_Total) - 
                                LookUp(
                                    AIGraphGTPvUserSatisf,
                                    Token_Model=ThisItem.Value,
                                    Usage_Total
                                )
                            ) / Sum(AIGraphGTPvUserSatisf,Usage_Total)
                        ) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20)
                    ), 0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height*1.5 - 10
            ZIndex: =2

        Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =AIGraph_Col2
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                    (
                        (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20) - (
                            (
                                Sum(AIGraphGTPvUserSatisf,Usage_Total) - 
                                LookUp(
                                    AIGraphGTPvUserSatisf,
                                    Token_Model=ThisItem.Value,
                                    Usage_Good
                                )
                            ) / Sum(AIGraphGTPvUserSatisf,Usage_Total)
                        ) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20)
                    ), 0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =3

        Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =AIGraph_Col3
            FocusedBorderThickness: =4
            Height: =40
            Width: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                    (
                        (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20) - (
                            (
                                Sum(AIGraphGTPvUserSatisf,Usage_Total) - 
                                LookUp(
                                    AIGraphGTPvUserSatisf,
                                    Token_Model=ThisItem.Value,
                                    Usage_Bad
                                )
                            ) / Sum(AIGraphGTPvUserSatisf,Usage_Total)
                        ) * (Parent.Width - DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width - 20)
                    ), 0
                )
            X: =DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Daily_Default_AIGraph_UserSatisf.Width + 20
            Y: =Parent.TemplateHeight/2 + Self.Height*0.5 + 10
            ZIndex: =4

        Value_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =Text(
                    LookUp(
                        AIGraphGTPvUserSatisf,
                        Token_Model=ThisItem.Value,
                        Usage_Total
                    ), 
                    "###,###,###,###"
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGTPvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGTPvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf.Y
            ZIndex: =5

        Value_BarChart_GPTv_UsageGood_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =If(
                    IsBlank(
                        Text(
                            LookUp(
                                AIGraphGTPvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Good
                            ), 
                            "###,###,###,###"
                        )
                    ),
                    "0",
                    Text(
                        LookUp(
                            AIGraphGTPvUserSatisf,
                            Token_Model=ThisItem.Value,
                            Usage_Good
                        ), 
                        "###,###,###,###"
                    )
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGTPvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGTPvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf.Y
            ZIndex: =6

        Value_BarChart_GPTv_UsageBad_AIGraph_UserSatisf As label:
            Align: =Align.Right
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =If(
                    IsBlank(
                        Text(
                            LookUp(
                                AIGraphGTPvUserSatisf,
                                Token_Model=ThisItem.Value,
                                Usage_Bad
                            ), 
                            "###,###,###,###"
                        )
                    ),
                    "0",
                    Text(
                        LookUp(
                            AIGraphGTPvUserSatisf,
                            Token_Model=ThisItem.Value,
                            Usage_Bad
                        ), 
                        "###,###,###,###"
                    )
                )
            Visible: |-
                =If(
                    AppsBIAxis.Value = "GPT 버전",
                    If(
                        CountRows(AIGraphGTPvUserSatisf) <> 1 Or !IsBlank(First(AIGraphGTPvUserSatisf).Token_Model),
                        true,
                        false
                    ),
                    false
                )
            Width: =135
            X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
            Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf.Y
            ZIndex: =7

    DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: |-
            =IfError(
                If(
                    CountRows(AIGraphCategoryLV1UserSatisf) > 5,
                    150,
                    BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height / CountRows(AIGraphGTPvUserSatisf)
                ),
                150,
                If(
                    CountRows(AIGraphCategoryLV1UserSatisf) > 5,
                    150,
                    BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height / CountRows(AIGraphGTPvUserSatisf)
                )
            )
        PaddingLeft: =0
        PaddingRight: |
            =0
        Size: =16
        Text: ="총 사용 비교"
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =LineChart_Default_Daily_AIGraph_UserSatisf.X + 20
        Y: =LineChart_Default_Daily_AIGraph_UserSatisf.Y
        ZIndex: =59

    Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =AIGraph_Col1
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                (
                    (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 20)
                ), 0
            )
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 - Self.Height*1.5 - 10
        ZIndex: =60

    Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =AIGraph_Col2
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                (
                    (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 20) - (
                        (
                            Max(AIGraphGTPvUserSatisf,Usage_Total) - 
                            LookUp(
                                AIGraphGTPvUserSatisf,
                                Token_Model=DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Text,
                                Usage_Good
                            )
                        ) / Max(AIGraphGTPvUserSatisf,Usage_Total)
                    ) * (BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 20)
                ), 0
            )
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 - Self.Height/2
        ZIndex: =61

    Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =AIGraph_Col3
        FocusedBorderThickness: =4
        Height: =40
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                (
                    (Parent.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 20) - (
                        (
                            Max(AIGraphGTPvUserSatisf,Usage_Total) - 
                            LookUp(
                                AIGraphGTPvUserSatisf,
                                Token_Model=Blank(),
                                Usage_Bad
                            )
                        ) / Max(AIGraphGTPvUserSatisf,Usage_Total)
                    ) * (Parent.Width - DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - 20)
                ), 0
            )
        X: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width + 20
        Y: =DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Y + DateLabel_BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Height/2 + Self.Height*0.5 + 10
        ZIndex: =62

    Value_BarChart_GPTv_UsageTotal_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingLeft: =0
        Size: =12
        Text: |-
            =/*If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                LookUp(
                    AIGraphGTPvUserSatisf,
                    Token_Model=Blank(),
                    Usage_Total
                ), 0
            )*/
            If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                Sum(AIGraphGTPvUserSatisf,Usage_Total), 
                0
            )
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Y
        ZIndex: =63

    Value_BarChart_GPTv_UsageGood_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: =Bar_BarChart_GPTv_UsageTotal_AIGraph_UserSatisf_0.Height
        PaddingLeft: =0
        Size: =12
        Text: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                Sum(AIGraphGTPvUserSatisf,Usage_Good), 
                0
            )
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Y
        ZIndex: =64

    Value_BarChart_GPTv_UsageBad_Daily_AIGraph_UserSatisf As label:
        Align: =Align.Right
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        FontWeight: =FontWeight.Semibold
        Height: =Bar_BarChart_GPTv_UsageGood_AIGraph_UserSatisf_0.Height
        PaddingLeft: =0
        Size: =12
        Text: |-
            =If(
                AppsBIAxis.Value = "GPT 버전" And !IsError(1/CountRows(AIGraphGTPvUserSatisf)),
                Sum(AIGraphGTPvUserSatisf,Usage_Bad), 
                0
            )
        Visible: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Visible
        Width: =135
        X: =BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.X + BarChart_GPTv_Default_Daily_AIGraph_UserSatisf.Width - Self.Width - 20
        Y: =Bar_BarChart_GPTv_UsageBad_AIGraph_UserSatisf_0.Y
        ZIndex: =65

    "BarChart_LV1Category_Detail_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =325
        Items: |-
            =SortByColumns(
                Filter(
                    AIGraphCategoryLV1UserSatisf,
                    Category_LV1 <> Blank(),
                    Token_UsageRate
                ),"Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =104
        Visible: =BarChart_LV1Category_Daily_AIGraph_UserSatisf.Visible
        Width: =395
        X: =1488
        Y: =250
        ZIndex: =66

        Label_BarChart_LV1Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Category_LV1
            X: =Color_BarChart_LV1Category_Detail_AIGraph_UserSatisf.X + Color_BarChart_LV1Category_Detail_AIGraph_UserSatisf.Width + 10
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =1

        Percentage_BarChart_LV1Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: =ThisItem.Token_UsageRate
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: |-
                =//Label_BarChart_LV1Category_Detail_AIGraph_DEV_GPTv_1.X + Label_BarChart_LV1Category_Detail_AIGraph_DEV_GPTv_1.Width
                Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 + 10
            ZIndex: =2

        Value_BarChart_LV1Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: =ThisItem.Usage_Total
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 - Self.Height - 10
            ZIndex: =3

        Label_Percentage_BarChart_LV1Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: ="사용 비율"
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Label_BarChart_LV1Category_Detail_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Detail_AIGraph_UserSatisf.Width
            Y: =Parent.TemplateHeight/2 + 10
            ZIndex: =4

        Label_Value_BarChart_LV1Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: |
                ="사용량"
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Label_BarChart_LV1Category_Detail_AIGraph_UserSatisf.X + Label_BarChart_LV1Category_Detail_AIGraph_UserSatisf.Width
            Y: =Parent.TemplateHeight/2 - Self.Height - 10
            ZIndex: =5

        Color_BarChart_LV1Category_Detail_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            Fill: |-
                =IfError(
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV1UserSatisf,
                                Category_LV1 <> Blank()
                            ),
                            Category_LV1=ThisItem.Category_LV1,
                            Index
                        )
                    ).Value
                )
            Height: =5
            OnSelect: =Select(Parent)
            Visible: =Parent.Visible
            Width: =30
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =6

    "BarChart_LV2Category_Detail_AIGraph_UserSatisf As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
        BorderColor: =RGBA(166, 166, 166, 1)
        DelayItemLoading: =true
        Height: =BarChart_LV1Category_Detail_AIGraph_UserSatisf.Height
        Items: |-
            =SortByColumns(
                Filter(
                    AIGraphCategoryLV2UserSatisf,
                    Category_LV2 <> Blank(),
                    Token_UsageRate
                ),"Usage_Total",SortOrder.Descending
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowNavigation: =true
        TemplatePadding: =0
        TemplateSize: =104
        Visible: =BarChart_LV2Category_Daily_AIGraph_UserSatisf.Visible
        Width: =BarChart_LV1Category_Detail_AIGraph_UserSatisf.Width
        X: =BarChart_LV1Category_Detail_AIGraph_UserSatisf.X
        Y: =BarChart_LV1Category_Detail_AIGraph_UserSatisf.Y
        ZIndex: =67

        Label_BarChart_LV2Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Category_LV2
            X: =Color_BarChart_LV2Category_Detail_AIGraph_UserSatisf.X + Color_BarChart_LV2Category_Detail_AIGraph_UserSatisf.Width + 10
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =1

        Percentage_BarChart_LV2Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: =ThisItem.Token_UsageRate
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: |-
                =//Label_BarChart_LV1Category_Detail_AIGraph_DEV_GPTv_1.X + Label_BarChart_LV1Category_Detail_AIGraph_DEV_GPTv_1.Width
                Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 + 10
            ZIndex: =2

        Value_BarChart_LV2Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: =ThisItem.Usage_Total
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Parent.TemplateWidth - Self.Width
            Y: =Parent.TemplateHeight/2 - Self.Height - 10
            ZIndex: =3

        Label_Percentage_BarChart_LV2Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: ="사용 비율"
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Label_BarChart_LV2Category_Detail_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Detail_AIGraph_UserSatisf.Width
            Y: =Parent.TemplateHeight/2 + 10
            ZIndex: =4

        Label_Value_BarChart_LV2Category_Detail_AIGraph_UserSatisf As label:
            Color: =RGBA(51, 51, 51, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13.5
            Text: |
                ="사용량"
            VerticalAlign: =VerticalAlign.Top
            Width: |
                =100
            X: =Label_BarChart_LV2Category_Detail_AIGraph_UserSatisf.X + Label_BarChart_LV2Category_Detail_AIGraph_UserSatisf.Width
            Y: =Parent.TemplateHeight/2 - Self.Height - 10
            ZIndex: =5

        Color_BarChart_LV2Category_Detail_AIGraph_UserSatisf As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            Fill: |-
                =IfError(
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value,
                    Color.Black,
                    Index(
                        AIGraphColorLists,
                        LookUp(
                            Filter(
                                AIGraphCategoryLV2UserSatisf,
                                Category_LV2 <> Blank()
                            ),
                            Category_LV2=ThisItem.Category_LV2,
                            Index
                        )
                    ).Value
                )
            Height: =5
            OnSelect: =Select(Parent)
            Visible: =Parent.Visible
            Width: =30
            Y: =Parent.TemplateHeight/2 - Self.Height/2
            ZIndex: =6

    Dropdown_AxisPicker_AIGraph_TokenUsage_1 As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(255, 255, 255, 1)
        ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
        ChevronDisabledFill: =RGBA(166, 166, 166, 1)
        ChevronFill: =RGBA(33, 33, 33, 1)
        ChevronHoverBackground: =RGBA(212, 212, 212, 1)
        ChevronHoverFill: =RGBA(33, 33, 33, 1)
        Color: =ColorValue(CSS_COMMON.colors.fg)
        Default: =First(AxisPickingList).Value
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Font: =Font.'Segoe UI'
        Height: =DatePicker_FirstDate_AIGraph_TokenUsage.Height
        HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(212, 212, 212, 1)
        Items: =AxisPickingList
        OnChange: |-
            =Set(AppsBIAxis, Self.Selected);
            Set(SelectedLV1_AIGraph, DEFAULT_CATEGORY_VALUE);
            Set(SelectedLV2_AIGraph, DEFAULT_CATEGORY_VALUE);
            Reset(Dropdown_DatePicker_AIGraph_UserSatisf);
            Select(Button_Table_Filtering_AIGraph_UserSatisf);
        PaddingBottom: =5
        PaddingLeft: =12
        PaddingRight: =5
        PaddingTop: =5
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Reset: =If(Self.Visible=true, true, false)
        SelectionFill: =RGBA(105, 121, 126, 1)
        Size: =13
        Width: =DatePicker_FirstDate_AIGraph_TokenUsage.Width
        X: =Label_RadioFilter_Category_AIGraph_TokenUsage.X + Label_RadioFilter_Category_AIGraph_TokenUsage.Width + 8
        Y: =Dropdown_GalleryFilter_CategoryLV1_AIGraph_TokenUsage.Y
        ZIndex: =68

    Sep_PieChart_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Label_PieChart_AIGraph_UserSatisf.X
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y + Label_GraphTitle_AIGraph_TokenUsage_1.Height + 16
        ZIndex: =69

    Label_GraphTitle_AIGraph_TokenUsage_1 As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(CSS_COMMON.colors.fg)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =28
        Size: =20
        Text: |-
            =Switch(
                Dropdown_AxisPicker_AIGraph_TokenUsage_1.Selected.Value, 
                "기간", "기간 별 만족 추이",
                "GPT 버전", "GPT 버전 별 만족 비교",
                "카테고리", "카테고리 별 만족 비교"
            )
        Width: =600
        X: =Label_GalleryFilter_Category_AIGraph_UserSatisf.X
        Y: =240
        ZIndex: =71

    Sep_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =1073
        X: =Label_GraphTitle_AIGraph_TokenUsage_1.X
        Y: =Label_GraphTitle_AIGraph_TokenUsage_1.Y + Label_GraphTitle_AIGraph_TokenUsage_1.Height + 16
        ZIndex: =72

    Sep_Summ_AIGraph_TokenUsage_1 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Fill: =RGBA(204, 204, 204, 1)
        FocusedBorderThickness: =4
        Height: =1
        Width: =385
        X: =Sep_PieChart_AIGraph_TokenUsage_1.X
        Y: =670
        ZIndex: =73

